================================================================================
INTERNAL DATA
================================================================================
FILE:    inxi-data.txt
VERSION: 2.1
DATE:    2021-07-16

----------------------------------------
Docs:
See: docs/inxi-resources.txt
See: docs/inxi-values.txt
See: docs/optimization.txt

----------------------------------------
Code: 
See:

----------------------------------------
Comments:

Store of internal data that is used for various features that are spread 
around inside of inxi. This helps dev work and gives a single location for 
distributed data.

================================================================================

Sections:
1. CORE DATA
  COMPOSITOR DATA
  CPU DATA
  DESKTOP / WM DATA
   PS GUI
   DESKTOP ARRAY RULES
	 DESKTOPS + WMs
   WM / COMPOSITORS: UNVERIFIED 
   WM COMMANDS
  GRAPHIC DATA
  LOGICAL DATA
  PARTITION DATA
  SERVICE DATA
  TTY DATA
2. SECONDARY DATA
  DISTRO DATA
  LIVE CD LOGINS
3. DATA ANALYSIS
4. OS DATA
  BSD DATA

================================================================================
CORE DATA
--------------------------------------------------------------------------------

========================================
COMPOSITOR DATA
----------------------------------------

qdbus org.kde.KWin /Compositor org.kde.kwin.Compositing.active
Gives you true or false depending on whether it is currently enabled or not

https://stackoverflow.com/questions/33195570/detect-if-compositor-is-running
To track compositor you'll need to check if selection is _NET_WM_CM_S0 
is owned by anyone (assuming you are on screen 0) using XGetSelectionOwner
Check if xprop -root has this data in it

https://stackoverflow.com/questions/33195570/detect-if-compositor-is-running

https://en.wikipedia.org/wiki/Compositing_window_manager

https://fedoraproject.org/wiki/How_to_debug_Wayland_problems

----------------------------------------
WAYLAND DATA 
----------------------------------------
----------------------------------------
https://gitlab.freedesktop.org/wayland/weston/-/issues/76

Displays, screens, Xorg Screen vs Wayland Display, gpus, etc.

Several X11 or Xorg concepts do not exist on Wayland or Weston, XScreen is one 
of them.
With Wayland, you also need to let go of the XScreen nomenclature. Nothing I 
know of implements anything like that. It's all just one big desktop extending 
to all outputs, regardless of whether it is one or more graphics cards. 

----------------------------------------
https://arewewaylandyet.com/
list of programs/wm to use with wayland

----------------------------------------
http://manpages.ubuntu.com/manpages/focal/man5/sway-output.5.html

 output HDMI-A-1 mode 1920x1080 pos 1920 0 bg ~/wallpaper.png stretch
 
 output "Some Company ABC123 0x00000000" pos 1920 0


----------------------------------------
Scale factor:
https://gitlab.freedesktop.org/wayland/wayland-protocols/-/issues/47

The current Wayland protocol allows clients to scale their buffers by an integer 
scale factor, matching the integer-scale defined for each output and therefore 
allowing their surfaces to be displayed at reasonable scale even on High-DPI 
displays.

The restriction to integer scale factors however is a big issue when the ideal 
scale factor for best usability falls in between two integers.

Example: On my 32" 4K display I would consider a scale factor of 1.5 to be 
ideal. At a scale of 1 text becomes too small to read, while a scale factor of 2 
wastes screen real-estate.

A second issue with integer scale factors is, that matching the scale of 
multiple outputs with different DPI values is not possible. Example: A common 
setup with this problem is a 1080p and a 1440p monitor of the same size next to 
each other.

Current implementations like Gnome, KWin, wlroots fake fractional scaling by 
providing clients with the next-highest integer scale factor for each output and 
then downsizing the received buffer during compositing. This approach comes with 
two major problems:

1. Since the client renders into a larger-than-native buffer there is a 
significant performance overhead, which is especially noticeable in graphics 
intensive applications such as games.

Example: on a 4K (3840 × 2160) display with an optimal scale factor of 1.5 a 
game might render at 5K (5120 × 2880) resolution requiring 78% more pixels than 
necessary to be rendered.

2. Downscaling causes aliasing artifacts, reducing the quality and sharpness of 
the image. This is especially noticeable with text rendering. Advanced text 
rendering techniques such as subpixel-rendering are completely impossible.

----------------------------------------
All Active Compositors (used for -G compositor item):

Primary:

budgie-wm compiz compton enlightenment gnome-shell kwin_wayland kwin_x11 marco 
muffin mutter

Secondary:

3dwm asc cage cagebreak cardboard clayland dcompmgr dwc dwl epd-wm fireplace 
gala gamescope greenfield grefson hikari hopalong japokwm kiwmi kmscon labwc 
laikawm liri lipstick maze metisse mir moblin motorcar monsterwm newm orbital 
papyros perceptia phoc picom river rustland sommelier sway swc swvkc taiwins 
tinybox tinywl ukwm unagi unity-system-compositor velox vivarium wavy waybox 
waycooler way-cooler wayfire wayhouse waymonad westeros westford weston wio wxrc 
wxrd xcompmgr xfwm4 xfwm5 xfwm

----------------------------------------
Wayland/Xorg compositors:

Budgie-wm Enlightenment Gala kmscon KWin Muffin Mutter Qtile

NOTE: mutter is metacity + clutter
Note: gala is made from mutter/clutter

----------------------------------------
Wayland compositors:

https://www.phoronix.com/scan.php?page=news_item&px=Wayland-Compositors-Less-2017


Pure wayland:

asc cage cagebreak cardboard clayland dwc dwl epd-wm fireplace gamescope 
greenfield grefson hikari hopalong japokwm kiwmi labwc laikawm lipstick liri 
maze motorcar newm orbital perceptia phoc river rustland sommelier sway swc 
swvkc taiwins tinybox tinywl velox vivarium wavy waybox way-?cooler wayfire 
wayhouse waymonad westeros westford weston wio wxr[cd]

Note: maze may be maze-compositor
Note: papyros > liri
Note: steamcompmgr > gamescope

Wayland but not wm:
kwin_wayland

----------------------------------------
X compositors:

compton compiz dcompmgr marco metisse picom steamcompmgr tinywm unagi ukwm 
xcompmgr

note: moblin not sure, think x

----------------------------------------

Mir: dead, it's own thing

----------------------------------------

Compositing WM (used with desktops):

budgie-wm 3dwm compiz enlightenment kwin_wayland kwin_x11 kwin marco muffin 
mutter xfwm4 xfwm5 metisse mir

----------------------------------------

NOTE: These are the current wm, listed is available data per for
getting version info. 

https://www.phoronix.com/scan.php?page=news_item&px=Wayland-Compositors-Less-2017

unknown: means not tested or verified yet. All unknown default to 0,0 version

unsupported: means has values 0,0 which means no version test runs. 

supported: means has known version data generator values.

## these are either wayland or x11/wayland wm/compositors
## budgie-wm, gnome-shell, kwin_x11, marco, muffin, mutter 
## can be compositing/non compositing wm
3dwm - unknown - wm
asc - unknown
budgie-wm - unknown - wm
# owned by: compiz-core in debian
compiz - supported - wm
compton - supported
dwc - unknown
# as of version 20 is wayland compositor
enlightenment - wm - note, uses a different method for version, from xprop, so can't be used
fireplace - unknown - wm
gnome-shell - supported - wm - very slow --version execution, only show if not in System:
grefson - unknown
kmscon - unknown
kwin_wayland - unknown - wm
kwin_x11 - version not used - wm
liri - unknown # Uncertain if this is the name of the liri projectc compositor now
marco - supported - wm
metisse - unknown - wm
mir - unknown - wm
moblin - unknown
motorcar - unknown
muffin - supported - wm
mutter - supports --version, but no example seen - wm
orbital - unknown
papyros - unknown # merged into liri, along with hawaii
perceptia - unknown - wm
rustland - unknown
sway - unknown
swc - unknown
unagi - unknown
wavy - unknown
way-cooler - unknown
wayhouse - unknown
westford - unknown
weston - supports --version, but no example seen
xcompmgr - unknown

## x11 common wm/compositors that have optional compositing and are not 
## shown in Compositor: item.
gala - unsupported - wm (deepin, --version works but not used, very slow)
kwin - ambuity, not in compositor: version not used - wm
metacity - ambuity, not in compositor: version not used - wm
xfwm4 - ambuity, not in compositor: version not used - wm
xfwm5 - ambuity, not in compositor: version not used - wm

----------------------------------------
COMPOSITOR ARRAY RULES
----------------------------------------

https://stackoverflow.com/questions/46578951/list-screen-resolutions-using-wayland-weston

note these don't give me any such results, no idea why unless it's a wayland item?

--------------------------
The reply is so late but still can be useful to you or someone :)

You can see all supported video adapters by using this command

$ ls /sys/class/drm
card0
card0-VGA-1
card1
card1-DVI-I-1
card1-HDMI-A-1
card1-VGA-2

You can get all supported resolutions by this command, use the adapter which you are using

$ cat /sys/class/drm/card0-LVDS-1/modes 
1366x768
1366x768

========================================
DISPLAY SERVER DATA
----------------------------------------

ARCAN
https://www.phoronix.com/scan.php?page=news_item&px=Arcan-Display-Server-September

Xvesa
https://doc.slitaz.org/en:guides:xorg-xvesa

Xvesa -version
Xvesa -listmodes

========================================
CPU DATA
----------------------------------------

----------------------------------------
ARM
----------------------------------------

https://unix.stackexchange.com/questions/255558/understanding-the-output-of-proc-cpuinfo
explanation of the various lines in /proc/cpuinfo

eg:
$ cat /proc/cpuinfo 
Processor   : AArch64 Processor rev 3 (aarch64)
processor   : 0
processor   : 1
processor   : 2
processor   : 3
processor   : 4
processor   : 5
processor   : 6
processor   : 7
Features    : fp asimd evtstrm aes pmull sha1 sha2 crc32 
CPU implementer : 0x41
CPU architecture: AArch64
CPU variant : 0x0
CPU part    : 0xd03
CPU revision    : 3

Hardware    : HiKey Development Board

----------
This is the expected output to Arm based processors. All Serialized cores are shown in list with line breaks instead of separated processors. Features are evaluated by cpuinfo code, and only show if all cores support them


    CPU implementer: Your code means ARM;
    CPU architecture: AArch64 means 64 bit ARM board:
    CPU variant : Indicates the variant number of the processor, or "major revision". Yours is zero.
    CPU part: Part number. 0xd03 indicates Cortex-A53 processor.
    CPU revision: Indicates patch release or "minor revision". 3, in your case
    Hardware    : HiKey Development Board is self explanatory

------------------------------------------
Android:
https://stackoverflow.com/questions/20775982/how-to-understand-the-information-of-my-android-processor

Processor   : ARMv7 Processor rev 1 (v7l)
processor   : 0
BogoMIPS    : 212.33

processor   : 1
BogoMIPS    : 212.33

Features    : swp half thumb fastmult vfp edsp thumbee neon vfpv3 tls vfpv4 
CPU implementer : 0x41
CPU architecture: 7
CPU variant : 0x0
CPU part    : 0xc05
CPU revision    : 1    
Hardware    : MSM8x25 U8951 BOARD
Revision    : 0000
Serial      : 0000000000000000


----------------------------------------
cpu_sys()
----------------------------------------
https://www.kernel.org/doc/html/v4.14/admin-guide/pm/cpufreq.html


Policy Interface in sysfs

During the initialization of the kernel, the CPUFreq core creates a sysfs directory (kobject) called cpufreq under /sys/devices/system/cpu/.

That directory contains a policyX subdirectory (where X represents an integer number) for every policy object maintained by the CPUFreq core. Each policyX directory is pointed to by cpufreq symbolic links under /sys/devices/system/cpu/cpuY/ (where Y represents an integer that may be different from the one represented by X) for all of the CPUs associated with (or belonging to) the given policy. The policyX directories in /sys/devices/system/cpu/cpufreq each contain policy-specific attributes (files) to control CPUFreq behavior for the corresponding policy objects (that is, for all of the CPUs associated with them).

Some of those attributes are generic. They are created by the CPUFreq core and their behavior generally does not depend on what scaling driver is in use and what scaling governor is attached to the given policy. Some scaling drivers also add driver-specific attributes to the policy directories in sysfs to control policy-specific aspects of driver behavior.

The generic attributes under /sys/devices/system/cpu/cpufreq/policyX/ are the following:

affected_cpus
    List of online CPUs belonging to this policy (i.e. sharing the hardware performance scaling interface represented by the policyX policy object).
bios_limit

    If the platform firmware (BIOS) tells the OS to apply an upper limit to CPU frequencies, that limit will be reported through this attribute (if present).

    The existence of the limit may be a result of some (often unintentional) BIOS settings, restrictions coming from a service processor or another BIOS/HW-based mechanisms.

    This does not cover ACPI thermal limitations which can be discovered through a generic thermal driver.

    This attribute is not present if the scaling driver in use does not support it.
cpuinfo_cur_freq

    Current frequency of the CPUs belonging to this policy as obtained from the hardware (in KHz).

    This is expected to be the frequency the hardware actually runs at. If that frequency cannot be determined, this attribute should not be present.
cpuinfo_max_freq
    Maximum possible operating frequency the CPUs belonging to this policy can run at (in kHz).
cpuinfo_min_freq
    Minimum possible operating frequency the CPUs belonging to this policy can run at (in kHz).
cpuinfo_transition_latency

    The time it takes to switch the CPUs belonging to this policy from one P-state to another, in nanoseconds.

    If unknown or if known to be so high that the scaling driver does not work with the ondemand governor, -1 (CPUFREQ_ETERNAL) will be returned by reads from this attribute.
related_cpus
    List of all (online and offline) CPUs belonging to this policy.
scaling_available_governors

    List of CPUFreq scaling governors present in the kernel that can be attached to this policy or (if the intel_pstate scaling driver is in use) list of scaling algorithms provided by the driver that can be applied to this policy.

    [Note that some governors are modular and it may be necessary to load a kernel module for the governor held by it to become available and be listed by this attribute.]
scaling_cur_freq

    Current frequency of all of the CPUs belonging to this policy (in kHz).

    In the majority of cases, this is the frequency of the last P-state requested by the scaling driver from the hardware using the scaling interface provided by it, which may or may not reflect the frequency the CPU is actually running at (due to hardware design and other limitations).

    Some architectures (e.g. x86) may attempt to provide information more precisely reflecting the current CPU frequency through this attribute, but that still may not be the exact current CPU frequency as seen by the hardware at the moment.
scaling_driver
    The scaling driver currently in use.
scaling_governor

    The scaling governor currently attached to this policy or (if the intel_pstate scaling driver is in use) the scaling algorithm provided by the driver that is currently applied to this policy.

    This attribute is read-write and writing to it will cause a new scaling governor to be attached to this policy or a new scaling algorithm provided by the scaling driver to be applied to it (in the intel_pstate case), as indicated by the string written to this attribute (which must be one of the names listed by the scaling_available_governors attribute described above).
scaling_max_freq

    Maximum frequency the CPUs belonging to this policy are allowed to be running at (in kHz).

    This attribute is read-write and writing a string representing an integer to it will cause a new limit to be set (it must not be lower than the value of the scaling_min_freq attribute).
scaling_min_freq

    Minimum frequency the CPUs belonging to this policy are allowed to be running at (in kHz).

    This attribute is read-write and writing a string representing a non-negative integer to it will cause a new limit to be set (it must not be higher than the value of the scaling_max_freq attribute).
scaling_setspeed

    This attribute is functional only if the userspace scaling governor is attached to the given policy.

    It returns the last frequency requested by the governor (in kHz) or can be written to in order to set a new frequency for the policy.


The boost File in sysfs

This file is located under /sys/devices/system/cpu/cpufreq/ and controls the “boost” setting for the whole system. It is not present if the underlying scaling driver does not support the frequency boost mechanism (or supports it, but provides a driver-specific interface for controlling it, like intel_pstate).

If the value in this file is 1, the frequency boost mechanism is enabled. This means that either the hardware can be put into states in which it is able to trigger boosting (in the hardware-based case), or the software is allowed to trigger boosting (in the software-based case). It does not mean that boosting is actually in use at the moment on any CPUs in the system. It only means a permission to use the frequency boost mechanism (which still may never be used for other reasons).

If the value in this file is 0, the frequency boost mechanism is disabled and cannot be used at all.

The only values that can be written to this file are 0 and 1.


Legacy AMD cpb Knob

The AMD powernow-k8 scaling driver supports a sysfs knob very similar to the global boost one. It is used for disabling/enabling the “Core Performance Boost” feature of some AMD processors.

If present, that knob is located in every CPUFreq policy directory in sysfs (/sys/devices/system/cpu/cpufreq/policyX/) and is called cpb, which indicates a more fine grained control interface. The actual implementation, however, works on the system-wide basis and setting that knob for one policy causes the same value of it to be set for all of the other policies at the same time.

That knob is still supported on AMD processors that support its underlying hardware feature, but it may be configured out of the kernel (via the CONFIG_X86_ACPI_CPUFREQ_CPB configuration option) and the global boost knob is present regardless. Thus it is always possible use the boost knob instead of the cpb one which is highly recommended, as that is more consistent with what all of the other systems do (and the cpb knob may not be supported any more in the future).

The cpb knob is never present for any processors without the underlying hardware feature (e.g. all Intel ones), even if the CONFIG_X86_ACPI_CPUFREQ_CPB configuration option is set.

https://lwn.net/Articles/254445/
legacy cpu_map in /sys cpu data. If it's legacy you can tell either by presence of cpu_map file or by value of files.

/sys/devices/system/cpu/cpu0/cache/index2/shared_cpu_map:["01"]

/sys/devices/system/cpu/cpu0/topology/core_siblings:["01"]
/sys/devices/system/cpu/cpu0/topology/thread_siblings:["01"]
/sys/devices/system/cpu/cpu0/topology/core_id:["0"]

 For a four-socket, dual-core Opteron machine the cache information looks like Table 5.2:

    	type	level	shared_cpu_map
    cpu0 	index0	Data	1	00000001
					index1	Instruction	1	00000001
					index2	Unified	2	00000001
    cpu1 	index0	Data	1	00000002
					index1	Instruction	1	00000002
					index2	Unified	2	00000002
    cpu2 	index0	Data	1	00000004
					index1	Instruction	1	00000004
					index2	Unified	2	00000004
    cpu3 	index0	Data	1	00000008
					index1	Instruction	1	00000008
					index2	Unified	2	00000008
    cpu4 	index0	Data	1	00000010
					index1	Instruction	1	00000010
					index2	Unified	2	00000010
    cpu5 	index0	Data	1	00000020
					index1	Instruction	1	00000020
					index2	Unified	2	00000020
    cpu6 	index0	Data	1	00000040
					index1	Instruction	1	00000040
					index2	Unified	2	00000040
    cpu7 	index0	Data	1	00000080
					index1	Instruction	1	00000080
					index2	Unified	2	00000080
    
 Table 5.3 shows the interesting files in this hierarchy for the SMP Opteron machine.

    	physical_
    package_id 	core_id 	core_
    siblings 	thread_
    siblings
    cpu0	0	0	00000003	00000001
    cpu1 	1	00000003	00000002
    cpu2	1	0	0000000c	00000004
    cpu3 	1	0000000c	00000008
    cpu4	2	0	00000030	00000010
    cpu5 	1	00000030	00000020
    cpu6	3	0	000000c0	00000040
    cpu7 	1	000000c0	00000080
    
Taking Table 5.2 and Table 5.3 together we can see that no CPU has hyper-threads (the thread_siblings bitmaps have one bit set), that the system in fact has four processors (physical_package_id 0 to 3), that each processor has t

https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-devices-system-cpu

----------------------------------------
scaling / cpuinfo speeds
----------------------------------------
https://unix.stackexchange.com/questions/87522/why-do-cpuinfo-cur-freq-and-proc-cpuinfo-report-different-numbers

So what about cpuinfo_cur_freq?

This parameter has more to do with the specification of the CPU and which profile it's currently in, rather than anything useful with respect to how the CPU is currently operating. For actual operational telemetry I'd use the scaling_* kernel tunables.

----------------------------------------
Cache L1 L2 L3
----------------------------------------
https://techgearoid.com/articles/does-each-core-have-its-own-l1-and-l2-cache/

While most modern processors do have L1, L2, L3, and even L4 in more recent 
ones, there are a few exceptions. Processors With L2 Cache SHARED

There most certainly are/were processors that have L1 cache per each core but 
have a shared L2 cache.

The older Core 2 Duo, Pentium Dual Core and the lot had shared L2 cache.

The newer Enterprise and Server Level processors also share L2 cache between 
their cores. The 2nd Generation Intel Xeon Phi (Knights Landing) are examples of 
processors where L2 cache is shared.

https://community.intel.com/t5/Intel-Moderncode-for-Parallel/How-to-discover-which-caches-L1-L2-L3-are-shared-by-which-HW/td-p/874330


https://stackoverflow.com/questions/944966/how-are-cache-memories-shared-in-multicore-intel-cpus

good graph/charts of intel core architectures
https://www.realworldtech.com/sandy-bridge/2/

https://www.nas.nasa.gov/hecc/support/kb/skylake-processors_550.html

----------------------------------------
Topology
----------------------------------------

https://www.spinics.net/lists/linux-tip-commits/msg48756.html

topology: Create core_cpus and die_cpus sysfs attributes

Create CPU topology sysfs attributes: "core_cpus" and "core_cpus_list"

These attributes represent all of the logical CPUs that share the
same core.

These attriutes is synonymous with the existing "thread_siblings" and
"thread_siblings_list" attribute, which will be deprecated.

Create CPU topology sysfs attributes: "die_cpus" and "die_cpus_list".
These attributes represent all of the logical CPUs that share the
same die.

-thread_siblings:
+core_cpus:
 -	internal kernel map of cpuX's hardware threads within the same
-	core as cpuX.
+	internal kernel map of CPUs within the same core.
+	(deprecated name: "thread_siblings")

-thread_siblings_list:
+core_cpus_list:
-	human-readable list of cpuX's hardware threads within the same
-	core as cpuX.
+	human-readable list of CPUs within the same core.
+	(deprecated name: "thread_siblings_list");

+die_cpus:
+
+	internal kernel map of CPUs within the same die.
+
+die_cpus_list:
+
+	human-readable list of CPUs within the same die.
+

----------------------------------------
FreeBSD: 

kern.sched.topology_spec:<groups>
 <group level="1" cache-level="0">
  <cpu count="8" mask="ff">0, 1, 2, 3, 4, 5, 6, 7</cpu>
  <children>
   <group level="2" cache-level="2">
    <cpu count="8" mask="ff">0, 1, 2, 3, 4, 5, 6, 7</cpu>
   </group>
  </children>
 </group>
</groups>

----------------------------------------
kern.sched.topology_spec: <groups>
 <group level="1" cache-level="0">
  <cpu count="4" mask="f">0, 1, 2, 3</cpu>
  <children>
   <group level="2" cache-level="2">
    <cpu count="4" mask="f">0, 1, 2, 3</cpu>
    <children>
     <group level="3" cache-level="1">
      <cpu count="2" mask="3">0, 1</cpu>
      <flags><flag name="THREAD">THREAD group</flag><flag name="SMT">SMT group</flag></flags>
     </group>
     <group level="3" cache-level="1">
      <cpu count="2" mask="c">2, 3</cpu>
      <flags><flag name="THREAD">THREAD group</flag><flag name="SMT">SMT group</flag></flags>
     </group>
    </children>
   </group>
  </children>
 </group>
</groups>
----------------------------------------
2x 6 core xeon:

kern.sched.topology_spec: <groups>
 <group level="1" cache-level="0">
  <cpu count="12" mask="fff,0,0,0">0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11</cpu>
  <children>
   <group level="2" cache-level="3">
    <cpu count="6" mask="3f,0,0,0">0, 1, 2, 3, 4, 5</cpu>
    <children>
     <group level="3" cache-level="2">
      <cpu count="1" mask="1,0,0,0">0</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="2,0,0,0">1</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="4,0,0,0">2</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="8,0,0,0">3</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="10,0,0,0">4</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="20,0,0,0">5</cpu>
     </group>
    </children>
   </group>
   <group level="2" cache-level="3">
    <cpu count="6" mask="fc0,0,0,0">6, 7, 8, 9, 10, 11</cpu>
    <children>
     <group level="3" cache-level="2">
      <cpu count="1" mask="40,0,0,0">6</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="80,0,0,0">7</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="100,0,0,0">8</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="200,0,0,0">9</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="400,0,0,0">10</cpu>
     </group>
     <group level="3" cache-level="2">
      <cpu count="1" mask="800,0,0,0">11</cpu>
     </group>
    </children>
   </group>
  </children>
 </group>
</groups>
----------------------------------------
inxi-BSD-freebsd-ThinkBSD-2020-09:
 Info: Quad Core model: Intel Core i5-3230M 

kern.smp.topology: 0
kern.smp.cpus: 4
kern.smp.disabled: 0
kern.smp.active: 1
kern.smp.maxcpus: 256
kern.smp.maxid: 3
...
kern.sched.topology_spec: <groups>
 <group level="1" cache-level="3">
  <cpu count="4" mask="f,0,0,0">0, 1, 2, 3</cpu>
  <children>
   <group level="2" cache-level="2">
    <cpu count="2" mask="3,0,0,0">0, 1</cpu>
    <flags><flag name="THREAD">THREAD group</flag><flag name="SMT">SMT group</flag></flags>
   </group>
   <group level="2" cache-level="2">
    <cpu count="2" mask="c,0,0,0">2, 3</cpu>
    <flags><flag name="THREAD">THREAD group</flag><flag name="SMT">SMT group</flag></flags>
   </group>
  </children>
 </group>
</groups>
----------------------------------------
inxi-BSD-freebsd-TinyBSD-2020-09
 Info: Dual Core model: Intel Atom N270 
 
kern.smp.forward_signal_enabled: 1
kern.smp.topology: 0
kern.smp.cpus: 2
kern.smp.disabled: 0
kern.smp.active: 1
kern.smp.maxcpus: 32
kern.smp.maxid: 1

kern.sched.topology_spec: <groups>
 <group level="1" cache-level="2">
  <cpu count="2" mask="3">0, 1</cpu>
  <flags><flag name="THREAD">THREAD group</flag><flag name="SMT">SMT group</flag></flags>
 </group>
</groups>
----------------------------------------
inxi-bsd-rianav.bsd.cdm-201405
FreeBSD 10.0-STABLE

CPU:        core AMD Athlon II X2 245 () 

kern.sched.topology_spec: <groups>
 <group level="1" cache-level="0">
  <cpu count="2" mask="3">0, 1</cpu>
  <children>
   <group level="2" cache-level="2">
    <cpu count="2" mask="3">0, 1</cpu>
   </group>
  </children>
 </group>
</groups>

----------------------------------------
inxi-bsd-itwjyg.local-201405
Dual core Intel Core2 Duo P8600 (SMP) cache: 3145.73

Distro: Mac OS X 10.9.2 ... lol...

----------------------------------------
DRAGONFLY:
----------------------------------------
inxi-bsd-dflybsd.local-201409

hw.cpu_topology.tree: 
\-PACKAGE MEMBERS: cpu0 cpu1 
  \-CHIP ID 0: cpu0 cpu1 
    |-CORE ID 0: cpu0 
    \-CORE ID 1: cpu1 

hw.cpu_topology.level_description: 0 - core; 1 - socket; 2 - anything
hw.cpu_topology.members: cpu0 cpu1
hw.cpu_topology.cpu0.physical_id: 0
hw.cpu_topology.cpu0.physical_siblings: cpu0 cpu1
hw.cpu_topology.cpu0.core_id: 0
hw.cpu_topology.cpu0.core_siblings: cpu0
hw.cpu_topology.cpu1.physical_id: 0
hw.cpu_topology.cpu1.physical_siblings: cpu0 cpu1
hw.cpu_topology.cpu1.core_id: 1
hw.cpu_topology.cpu1.core_siblings: cpu1
----------------------------------------
hw.cpu_topology.tree: 
\-PACKAGE MEMBERS: cpus(0-1) 
  \-CHIP ID 0: cpus(0-1) 
    \-CORE ID 0: cpus(0-1) 
      |-THREAD ID 0: cpus(0-0) 
      \-THREAD ID 1: cpus(1-1) 

hw.cpu_topology.level_description: 0 - thread; 1 - core; 2 - socket; 3 - anything
hw.cpu_topology.members: cpus(0-1)
hw.cpu_topology.cpu0.physical_id: 0
hw.cpu_topology.cpu0.physical_siblings: cpus(0-1)
hw.cpu_topology.cpu0.core_id: 0
hw.cpu_topology.cpu0.core_siblings: cpus(0-1)
hw.cpu_topology.cpu1.physical_id: 0
hw.cpu_topology.cpu1.physical_siblings: cpus(0-1)
hw.cpu_topology.cpu1.core_id: 0
hw.cpu_topology.cpu1.core_siblings: cpus(0-1)

----------------------------------------

https://listman.redhat.com/archives/libvir-list/2020-January/msg00277.html

Latest generation CPUs (CascadeLake-AP) support a new topology level
known as a 'die', sitting between a socket and a core.

QEMU supports this with -smp arg since 4.1.0

Linux can report this via /sys/devices/system/cpu/cpuNNN/topology
via 'die_id' and 'die_cpus' and 'die_cpus_list' files since 5.2

This series adds support for <topology> in guest XML to have a new
'dies' parameter, passed to QEMU, which defaults to '1' if omitted.

It extends host capabilities so that NUMA topology reports a new
'die_id' attribute

We can't expand 'virNodeInfoPtr' struct to have a die field, so
this will remain forever reporting 'cores' as being 'dies * cores'.

The <topology> in host capabilities XML is an interesting question.

If we are strict with our API semantics we would *not* add a 'dies'
parameter with any value other than '1' to <topology> in the host
capabilities.  If we reported a value other than 1, then any existing
apps which multiple  sockets*cores*threads will get the wrong total
CPU count.

We already know <topology> is broken by design for asymetric
hardware, so we could simply document that it will forever be broken
wrt to CPU dies too.  In this case we might be better to not even
report 'dies=1', just leave out the attr entirely.

Interestingly though, <topology> is already more broken than it
should be. For a VM with   -smp 12,sockets=2,dies=3,cores=2,threads=1
it is reporting <topology sockets=1 dies=1 cores=12 threads=1>.
It should at least do  <topology sockets=2 dies=1 cores=6 threads=1>.

I suspect the presence of dies is confusing the really incredibly
horrible logic in virHostCPUGetInfoLinux. This will also impact
virNodeInfoPtr data.

So even if we don't report dies, I think we still have a bug that
needs fixing here for the coarse node topology.

I'm also confused about what I see with EPYC. IIUC, it was supposed
to use the 'dies' concept, but in machines I've tested, Linux never
reports die count other than 1.  Perhaps only certain EPYC CPU
models or generations use 'dies', or perhaps Linux isn't reporting
correctly for EPYC, or perhaps I'm mislead into believeing it uses
dies.

Anyway, the upshot is I've not found any real hardware to test this
series on. I've tested it only inside a QEMU guest with the suitable
-smp arg to fake dies.

Daniel P. Berrangé (5):

----------------------------------------
https://askubuntu.com/questions/1318432/cpufreq-is-missing-from-sys-devices-system-cpu-cpu0
note: in some cases, /sys/devices/system/cpu/cpu0/cpufreq does not exist, maybe 
if scaling driver missing, don't know.

----------------------------------------
https://android.googlesource.com/kernel/common/+/a7827a2a60218b25f222b54f77ed38f57aebe08b/Documentation/cpu-freq/user-guide.txt

3.1 Preferred Interface: sysfs
------------------------------
The preferred interface is located in the sysfs filesystem. If you
mounted it at /sys, the cpufreq interface is located in a subdirectory
"cpufreq" within the cpu-device directory
(e.g. /sys/devices/system/cpu/cpu0/cpufreq/ for the first CPU).
cpuinfo_min_freq :		this file shows the minimum operating
				frequency the processor can run at(in kHz) 
cpuinfo_max_freq :		this file shows the maximum operating
				frequency the processor can run at(in kHz) 
cpuinfo_transition_latency	The time it takes on this CPU to
				switch between two frequencies in nano
				seconds. If unknown or known to be
				that high that the driver does not
				work with the ondemand governor, -1
				(CPUFREQ_ETERNAL) will be returned.
				Using this information can be useful
				to choose an appropriate polling
				frequency for a kernel governor or
				userspace daemon. Make sure to not
				switch the frequency too often
				resulting in performance loss.
scaling_driver :		this file shows what cpufreq driver is
				used to set the frequency on this CPU
scaling_available_governors :	this file shows the CPUfreq governors
				available in this kernel. You can see the
				currently activated governor in
scaling_governor,		and by "echoing" the name of another
				governor you can change it. Please note
				that some governors won't load - they only
				work on some specific architectures or
				processors.
cpuinfo_cur_freq :		Current frequency of the CPU as obtained from
				the hardware, in KHz. This is the frequency
				the CPU actually runs at.
scaling_available_frequencies : List of available frequencies, in KHz.
scaling_min_freq and
scaling_max_freq		show the current "policy limits" (in
				kHz). By echoing new values into these
				files, you can change these limits.
				NOTE: when setting a policy you need to
				first set scaling_max_freq, then
				scaling_min_freq.
affected_cpus :			List of CPUs that require software coordination
				of frequency.
related_cpus :			List of CPUs that need some sort of frequency
				coordination, whether software or hardware.
scaling_driver :		Hardware driver for cpufreq.
scaling_cur_freq :		Current frequency of the CPU as determined by
				the governor and cpufreq core, in KHz. This is
				the frequency the kernel thinks the CPU runs
				at.
bios_limit :			If the BIOS tells the OS to limit a CPU to
				lower frequencies, the user can read out the
				maximum available frequency from this file.
				This typically can happen through (often not
				intended) BIOS settings, restrictions
				triggered through a service processor or other
				BIOS/HW based implementations.
				This does not cover thermal ACPI limitations
				which can be detected through the generic
				thermal driver.
If you have selected the "userspace" governor which allows you to
set the CPU operating frequency to a specific value, you can read out
the current frequency in
scaling_setspeed.		By "echoing" a new frequency into this
				you can change the speed of the CPU,
				but only within the limits of
				scaling_min_freq and scaling_max_freq.

========================================
DESKTOPS / WM DATA
----------------------------------------

----------------------------------------
PS GUI
----------------------------------------

Sets a subset of detected ps_cmd data that match compositors, wm.

DesktopData: ps based wm desktop detection, wm fallback detections.

GraphicsData: compositor detection

desktop:
https://en.wikipedia.org/wiki/Desktop_environment
https://wiki.lxde.org/en/LXSession

wm: See for fairly comprenhensive list: 
https://wiki.archlinux.org/index.php/window_manager
http://www.xwinman.org/index.php
http://www.xwinman.org/others.php
https://www.gilesorr.com/wm/table.html
https://www.slant.co/topics/390/~best-window-managers-for-linux
https://en.wikipedia.org/wiki/Comparison_of_X_window_managers

https://en.wikipedia.org/wiki/Windowing_system

compositors: 
https://en.wikipedia.org/wiki/Compositing_window_manager
https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)
https://en.wikipedia.org/wiki/List_of_display_servers#Wayland

arcan display server?

----------------------------------------
DESKTOP ARRAY RULES
----------------------------------------

----------------------------------------
PRIMARY ARRAY RULES
----------------------------------------

Simplest detection to make a match:


-S desktops (other ids):

qw(razor-desktop razor-session lxsession lxqt-session tdelauncher tdeinit_phase1);

Test: Deepin [no version]; Pantheon [no version];
deepin may use /etc/deepin-version

NOTE: Pixel for ARM is really just a wrapped LXDE, and there is no unique 
identifier in current versions for detecting it.

----------------------------------------

-S desktops (window managers):

qw(afterstep awesome blackbox dwm fluxbox flwm fvwm-crystal fvwm2 fvwm 
i3 jwm matchbox-panel openbox sawfish scrotwm spectrwm 
twm WindowMaker wm2 wmii2 wmii xmonad);

----------------------------------------

-Sxx wm:

http://www.kevinboone.net/xdesktop_windowmanager.html
http://www.gilesorr.com/wm/table.html

qw(9wm afterstep amiwm awesome blackbox bspwm budgie-wm dwm fluxbox flwm fvwm-crystal fvwm2 fvwm 
gala gnome-shell i3 jwm twin kwin_wayland kwin_x11 kwin matchbox-window-manager
marco deepin-metacity metacity muffin mutter notion 
openbox ratpoison sawfish scrotwm spectrwm twm windowlab WindowMaker wm2 wmii2 wmii xfwm4 xfwm5);

Note: gala is pantheon wm; i3wm - same as i3/i3-wm
Not handled yet: 
2bwm 5dwm aewm cwm evilwm Ion monsterwm musca PlayWM 
sithWM snapwm steamcompmgr StumpWM UWM Wingo WMFS WMFS2 wmutils

test:  
AmiWM [no version]

----------------------------------------

-Sxxx info:

http://www.kevinboone.net/xdesktop_desktop.html
# 2009, already many of these are not present
http://penguininside.blogspot.com/2009/09/10-panel-dock-applications-for-your.html
http://openbox.org/wiki/Help:Openbox-session
https://urukrama.wordpress.com/openbox-guide/#Panelsetc

qw(awn bar bmpanel bmpanel2 budgie-panel cairo-dock 
dde-dock dmenu dockbarx docky dzen dzen2 fbpanel fspanel 
gnome-panel hpanel i3bar kicker ltpanel lxpanel lxqt-panel 
matchbox-panel mate-panel 
perlpanel plank plasma-desktop plasma-netbook pypanel 
razor-panel razorqt-panel tint2 
wbar wharf witray wingpanel vala-panel xfce4-panel xfce5-panel 
xmobar yabar)

Maybe:
lxsession (can be used with any wm)

awn = Avant Window Navigator
no package info yet: 'Avant Window Navigator' 'Gnome Do'
bbdock Perl-Panel BMPanel BarPanel PyPanel 

wharf=afterstep dock/bar

----------------------------------------
DESKTOPS + WMs
----------------------------------------

----------------------------------------
DESKTOPS
GTK-based:
Budgie; Cinnamon; GNOME; GPE; LXDE; MATE; Pantheon; ROX Desktop; Sugar; Xfce

Qt-based:
KDE Plasma Lumina LXQt (Razor-qt perpetuated) MoonLightDE 
OPIE Trinity

Motif-based:
CDE IRIX Interactive Desktop VUE

Other:
EDE (FLTK-based) Étoilé (GNUstep-based) Mezzo 
OpenWindows (OLIT-based) UDE (Xlib/XCB-based) Enlightenment (EFL-based)
xmonad

Pixel, raspbian default, fork of lxde

----------------------------------------
X WM:
Compositing:
Compiz KWin Metacity Muffin Mutter Xfwm Enlightenment

Stacking:
4Dwm 9wm AfterStep amiwm Blackbox CTWM cwm Fluxbox FLWM FVWM 
IceWM JWM Matchbox Motif Window Manager olwm Openbox Qvwm Sawfish 
swm twm tvtwm vtwm Window Maker WindowLab wm2

Tiling:
awesome bspwm dwm CLFSWM clfswm herbstluftwm i3 Ion larswm ratpoison 
scrotwm spectrwm StumpWM wmii xmonad

NOTE: scrotwm switched names to spectrwm around 2015 or so.

https://en.wikibooks.org/wiki/Guide_to_X11/Window_Managers
https://www.gilesorr.com/wm/table.html

----------------------------------------
WM / COMPOSITORS: UNVERIFIED 
----------------------------------------

See: COMPOSITOR DATA for more on compositor/wm

2bwm [new, fork of mcwm]
3dwm
5dwm [nonfree]
beryl
calmwm
catwm
cde [ancient, not used: Common Desktop Environment]
dcompmgr
dwc
fireplace
grefson
hackedbox [assume blackbox]
ion3 [unverified; also shell called ion]
mcwm [forked to 2bwm]
mir
moblin
monsterwm [new]
motorcar
musca
nawm
orbital
penrose [new]
qvwm
rustland [new]
snapwm [new]
sommelier
swc
tvtwm
uwm [legacy: https://en.wikipedia.org/wiki/Ultrix_Window_Manager]
wavy
wayfire
wayhouse
westford
weston
wingo [new]
wmfs2 [new]
yeahwm

----------------------------------------
WM COMMANDS
----------------------------------------

sudo systemctl start lightdm.service

----------------------------------------
9wm
right click opens terminal options

exit: run: 9wm exit 
in terminal

http://unauthorised.org/dhog/9wm/README

----------------------------------------
aewm++ [fork of aewm]
 -version: Version: 1.0 [stdout]
 
cycle virtual desktops with page up/down keys

The following context events are available from the desktop:

    Left Click - Launch menu
    Middle Click - Open a terminal window
    Right Click - Task List

The following context events are available from the meta button:

    Left Click - Hide Window
    Middle Click - Resize Window
    Right Click - Hide Window

The following context events are available from the titlebar:

    Click and Drag - Provides window motion.
    Middle Click - Shade and unshade window
    Right Click - Hide Window
    Double Click - Maximize, Restore or Unshade Window.

----------------------------------------
amiwm:
right click on 'workbench', quit
enter command, xterm, to open terminal
NOTE: only gui 'about' item seems to show version 

----------------------------------------
antiwm [fork of ratpoison]
v: no -v/-V/-version/--version

----------------------------------------
awesome 
right click on desktop opens menu 
'awesome' right click item has exit 
'debian' has main programs


----------------------------------------
blackbox:
right click desktop for options

note: window manager selector, has many various ones, more than 
default login options

----------------------------------------
bspwm:
controlled by bspc 
bspwm -v

quit
https://classicforum.manjaro.org/index.php?topic=18970.0
----------------------------------------
cagebreak

----------------------------------------
calmwm

Alt + Cntrl + Enter = launch xterm
Alt + Cntrl + Shift + Enter = make xterm session fullscreen
F11 - chrome fullscreen
Alt + Mouse1 = move window 

----------------------------------------
clfswm [ no -v/--version]

----------------------------------------
cwm: [openbsd fork of calmwm]
https://man.openbsd.org/cwm

C Control key.
M Meta key. [alt]
S Shift key.
4 Mod4 (windows) key.
M1 Left mouse button.
M2 Middle mouse button.
M3 Right mouse button.

CM-Return: Spawn a new terminal.
CM-w Spawn “exec WindowManager” menu, allowing a switch to another window manager.
CMS-r Restart.
CMS-q Quit.

----------------------------------------
dwm: [no -v/--version]
 -v: dwm-6.2 [stderr]
 
[Shift]+[Alt]+[Enter] - launch terminal
move to terminal: alt+ terminal number
shift + alt + c - kill window

shift + alt + q - quit

or:
windowkey enter - terminal
windows shift q - quit

https://dwm.suckless.org/tutorial/

----------------------------------------
echinus: [dwm fork]
https://wiki.archlinux.org/index.php/Echinus
https://www.gsp.com/cgi-bin/man.cgi?section=1&topic=echinus

----------------------------------------
evilwm:
ctrl alt return = terminal
https://wiki.archlinux.org/index.php/Evilwm
----------------------------------------
flwm 
right click on window border, or any-click on desktop,
or typing alt+esc or alt+tab will pop up menu 

releasing alt will pick current menu item 

logout in main menu

----------------------------------------
fvwm, fvwm1, fvwm2
fmwm-crystal - right click opens terminal

left click desktop for commands

----------------------------------------
glass [wm] [fork oof evilwm]
ctrl alt return = terminal

----------------------------------------
hackedbox [-version], based on blackbox

----------------------------------------
herbstluftwm 

antix: default mod is windows key

xterm: alt + return 

herbstclient + command

herbstclient version

herbstclient list_monitors

to logout,

in terminal, type: herbstclient quit 

----------------------------------------
i3 
mod key: windows key
mod + <enter>
mod + d = dmenu
mod shift q - close application
mod f - fullscreen
mod f - again, exit full screen
mod shift e - exit i3

https://fedoramagazine.org/getting-started-i3-window-manager/

----------------------------------------
ion3: [--version]
https://man.cx/ion3(1)

These are the default key and pointer bindings. 
(Mod1) depends on your system. 
On PC:s with XFree86 it is probably bound to the left Alt key (Alt_L). 
On Suns it is usually bound to the diamond keys (Meta_L, Meta_R). 
Use xmodmap(1x) to find out.

F12, Button3 press: Display the main menu
Mod1+C: Close current object.
F2: run terminal emulator
----------------------------------------
jbwm
https://github.com/jefbed/jbwm

----------------------------------------
jwm

simple gui, menu, left click desktop for term

----------------------------------------
jbwm [evilwm fork]
 mod [wind] enter - terminal
----------------------------------------
larswm [ -v version] [based on 9wm]

shift + ctrl + return = terminal
or
right click on desktop to get an option list

center mouse button click to get logout etc
----------------------------------------
leftwm [no --version/-v currently]

LeftWM avaialbe in Fedora Copr: 
sudo dnf copr enable atim/leftwm -y && sudo dnf install leftwm

Keybinding 	Description
Mod + Shift + Enter	Open a terminal
Mod + Ctrl + L	Lock the screen
Mod + Shift + X	Exit LeftWM

Mod + (1-9) 	Switch to a desktop/tag
Mod + Shift + (1-9) 	Move the focused window to desktop/tag
Mod + W 	Switch the desktops for each screen. Desktops [1][2] changes to [2][1]
Mod + Shift + W 	Move window to the other desktop
Mod + (⬆️⬇️) 	Focus on the different windows in the current workspace
Mod + Shift + (⬆️⬇️) 	Move the different windows in the current workspace
Mod + Enter 	Move selected window to the top of the stack in the current workspace
Mod + Ctrl + (⬆️⬇️) 	Switch between different layouts
Mod + Shift + (⬅➡) 	Switch between different workspaces
Mod + Shift + Enter 	Open a terminal
Mod + Ctrl + L 	Lock the screen
Mod + Shift + X 	Exit LeftWM
Mod + Shift + Q 	Close the current window
Mod + Shift + R 	Reload LeftWM and its config
Mod + p 	Use dmenu to start application
----------------------------------------
lwm

center mouse click = term

----------------------------------------
matchbox: manj. build failed
see: ubunt 14.4 wms

basically a gui desktop, no obvious way to logout

----------------------------------------
mini [aewm++ stripped/fork]

right click on desktop opens term

----------------------------------------
motif window manager (mwm):

right mouse click on desktop, root menu 

----------------------------------------
musca: [ -v version]
https://linux.die.net/man/1/musca

quit: exit musca
----------------------------------------

notion: [fork of ion3]
F2 opens terminal
F1 + enter opens manual 
F12: menu, esc closes it

logout: f12 type session/exit or if gui menu, session > exit

right click held down activates some options on windows
----------------------------------------
pekwm
right click desktop, select terminal

menu pekwm option exit to log out

----------------------------------------
qtile:
https://wiki.archlinux.org/index.php/Qtile
 
 --version: 0.15.1 [stdout]

 mod = windows key
 
Super+Enter to open a new xterm terminal
Super+Ctrl+q to quit Qtile.

----------------------------------------
qvwm: [manj. build failed]

----------------------------------------
ratpoison 
ctrl + t then ? - help 
ctrl + t then . - menu 
basic, applications, wm
f12 type menu
enter: session/exit
https://wiki.archlinux.org/index.php/Ratpoison

ctrl + t - c : xterm
----------------------------------------
sawfish 
center click opens options, menu

----------------------------------------
spectrwm (previously scrotwm)
window + shift + enter: terminal 

right alt seems to be meta

Alt-Shift-Enter 

Meta+Shift+Return: open terminal
Meta+p: dmenu (then type the start of the program name and return)
Meta+1/2/3/4/5/6/7/8/9/0: select workspaces 1-10
Meta+Shift+1/2/3/4/5/6/7/8/9/0: move window to workspace 1-10
Meta+Right/Left: select next/previous workspace
Meta+Shift+Right/Left: select next/previous screen
Meta+Spacebar: cycle through layouts (vertical, horizontal, maximized)
Meta+j/k: cycle through windows forwards/backwards
Meta+Tab/Meta+Shft+Tab: same as Meta+j/k
Meta+Return: move current window to master area
Meta+h/l:  increase/decrease size of master area
Meta+x: close window
Meta+Shift+x: kill window
Meta+b: hide/show status bar
Meta+q: restart spectrwm (reset desktops and reread spectrwm config without stopping running programs)
Meta+Shift+q: exit spectrwm

----------------------------------------
StumpWM [ --version stdout]
----------------------------------------
tinywm

----------------------------------------
twm:
left click: open option menu

----------------------------------------
windowlab:
right click brings up hover top menu
about, exit, terminal options.
----------------------------------------
window maker

----------------------------------------
wm2
no version
center or left click on screen, select 'new', opens term
----------------------------------------
wmii [manj. build failed]
default mod is alt key, but my version it's window key

mod+enter = terminal 
mod+p = wimenu type in what you want 
mod +a = action menu, type quit to exit

https://wiki.archlinux.org/index.php/Wmii

----------------------------------------
wmx: appears to be fork of wm2
no version
----------------------------------------
xmonad: 
start term: alt-shift-enter
logout: 
Mod+Shift+Q. By default, Mod is the Alt key.

https://xmonad.org/tour.html

----------------------------------------
yeahwm [evilwm, aewm fork]


========================================
DEVICE DATA
----------------------------------------

----------------------------------------
Open/NetBSD ARM / SOC
----------------------------------------

https://man.bsd.lv/NetBSD-8.0/ofctl.8
ofctl without arguments will dump theh entire tree, which is what we need here!

----------------------------------------
FreeBSD ARM / SOC
----------------------------------------

To get dmi-like data on arm with FDT (all RPi atm) one should use ofwdump and 
/dev/openfirm. It has access to DTB, so it is +- the way kernel see hardware.

Note: ofdump sucks,you have to use -a to get all the device nodes, which are 
seriously incomplete, then you have to drill in one at a time with -p and 
collect the node information on at a time, useless.

It's odd that BSD 'unix' which prides itself on 'everything is a file' has no
'everything is a file' data structures like Linux does, /proc, /sys. More
than a bit odd to be honest, there's just a bunch of odd little not that great
tools to get this data, some super inconsistent and hard to parse sysctl and 
dmesg.boot data, when it could easily be put into a single kernel 
live dynamic data structure, call it /kern for example to avoid the appearance
of copying Linux /proc and /sys, but man.... learn to copy good ideas!!!

https://wiki.freebsd.org/FlattenedDeviceTree
----------------------------------------
# devinfo
nexus0
  ofwbus0
    psci0
    simplebus0
      bcm2835_clkman0
      mbox0
      gpio0
        gpiobus0
        gpioc0
      uart0
      spi0
        spibus0
      iichb0
        iicbus0
          iic0
      bcm283x_dwcotg0
        usbus1
          uhub0
            uhub1
              uhub2
                muge0
                  miibus0
                    ukphy0
      bcm_dma0
      intc0
      bcmwd0
      bcmrng0
      lintc0
      sdhci_bcm0
        mmc0
          mmcsd0
      bcm2835_firmware0
        ofw_clkbus1
        gpio1
          gpiobus1
          gpioc1
      fb0
        fbd0
    ofw_clkbus0
      clk_fixed0
      clk_fixed1
    usb_nop_xceiv0
    pmu0
    generic_timer0
    cpulist0
      cpu0
        bcm2835_cpufreq0
        cpufreq0
      cpu1
      cpu2
      cpu3
    gpioled0
    regfix0
    regfix1
  cryptosoft0
  
----------------------------------------  
# ofwdump -a
Node 0xc06309a0: 
  Node 0xc0630a04: aliases
  Node 0xc0630b04: cpus
    Node 0xc0630b30: PowerPC,8555@0
  Node 0xc0630bec: memory
  Node 0xc0630c24: soc8555@e0000000
    Node 0xc0630cac: ecm-law@0
    Node 0xc0630cfc: ecm@1000
    Node 0xc0630d6c: memory-controller@2000
    Node 0xc0630dec: l2-cache-controller@20000
    Node 0xc0630ea4: i2c@3000
    Node 0xc0630f40: dma@21300
      Node 0xc0630fd8: dma-channel@0
      Node 0xc0631074: dma-channel@80
      Node 0xc0631110: dma-channel@100
      Node 0xc06311ac: dma-channel@180
    Node 0xc063124c: ethernet@24000
      Node 0xc0631360: mdio@520
        Node 0xc06313c4: ethernet-phy@0
        Node 0xc063143c: ethernet-phy@1
        Node 0xc06314b4: tbi-phy@11
    Node 0xc0631504: ethernet@25000
      Node 0xc0631618: mdio@520
        Node 0xc0631678: tbi-phy@11
    Node 0xc06316c8: serial@4500
    Node 0xc063175c: serial@4600
    Node 0xc06317f0: crypto@30000
    Node 0xc0631898: pic@40000
    Node 0xc0631930: cpm@919c0
      Node 0xc06319a8: muram@80000
        Node 0xc06319f0: data@0
      Node 0xc0631a40: brg@919f0
      Node 0xc0631aa8: pic@90c00
  Node 0xc0631b58: pci@e0008000
    Node 0xc0631fa8: i8259@19000
  Node 0xc0632068: pci@e0009000
  
----------------------------------------
# ofwdump -ar
Node 0x48: 
  Node 0x118: framebuffer@3eaf0000
  Node 0x1c8: psci
  Node 0x204: system
  Node 0x238: axi
    Node 0x240: vc_mem
  Node 0x26c: aliases
  Node 0x708: chosen
    Node 0x890: bootloader
  Node 0x8a8: reserved-memory
    Node 0x8f8: linux,cma
  Node 0x964: thermal-zones
    Node 0x978: cpu-thermal
      Node 0x9dc: cooling-maps
  Node 0x9fc: soc
    Node 0xa88: txp@7e004000
    Node 0xb10: cprman@7e101000
    Node 0xbcc: mailbox@7e00b880
    Node 0xc50: gpio@7e200000
      Node 0xd10: mmc_pins
      Node 0xd8c: dpi_gpio0
      Node 0xe3c: emmc_gpio22
      Node 0xe94: emmc_gpio34
      Node 0xf10: emmc_gpio48
      Node 0xf68: gpclk0_gpio4
      Node 0xfb0: gpclk1_gpio5
      Node 0xff8: gpclk1_gpio42
      Node 0x1040: gpclk1_gpio44
      Node 0x1088: gpclk2_gpio6
      Node 0x10d0: gpclk2_gpio43
      Node 0x1128: i2c0_gpio0
      Node 0x1170: i2c0_gpio28
      Node 0x11b8: i2c0_gpio44
      Node 0x1200: i2c1_gpio2
      Node 0x1248: i2c1_gpio44
      Node 0x1290: jtag_gpio22
      Node 0x12e8: pcm_gpio18
      Node 0x1338: pcm_gpio28
      Node 0x1388: sdhost_gpio48
      Node 0x13e4: spi0_gpio7
      Node 0x1438: spi0_gpio35
      Node 0x148c: spi1_gpio16
      Node 0x14e4: spi2_gpio40
      Node 0x153c: uart0_gpio14
      Node 0x1588: uart0_ctsrts_gpio16
      Node 0x15d8: uart0_ctsrts_gpio30
      Node 0x163c: uart0_gpio32
      Node 0x169c: uart0_gpio36
      Node 0x16e8: uart0_ctsrts_gpio38
      Node 0x1738: uart1_gpio14
      Node 0x1784: uart1_ctsrts_gpio16
      Node 0x17d4: uart1_gpio32
      Node 0x1820: uart1_ctsrts_gpio30
      Node 0x1870: uart1_gpio40
      Node 0x18bc: uart1_ctsrts_gpio42
      Node 0x190c: i2c_slave_gpio18
      Node 0x1964: jtag_gpio4
      Node 0x19b8: pwm0_gpio12
      Node 0x19fc: pwm0_gpio18
      Node 0x1a40: pwm0_gpio40
      Node 0x1a84: pwm1_gpio13
      Node 0x1ac8: pwm1_gpio19
      Node 0x1b0c: pwm1_gpio41
      Node 0x1b50: pwm1_gpio45
      Node 0x1b94: dpi_18bit_gpio0
      Node 0x1c30: dpi_18bit_gpio2
      Node 0x1cc4: gpioout
      Node 0x1d04: alt0
      Node 0x1d5c: spi0_pins
      Node 0x1da8: spi0_cs_pins
      Node 0x1df4: i2c0
      Node 0x1e38: i2c1
      Node 0x1e7c: i2s
      Node 0x1ec4: sdio_pins
      Node 0x1f40: bt_pins
      Node 0x1f84: uart0_pins
      Node 0x1fcc: uart1_pins
      Node 0x2014: audio_pins
    Node 0x2060: serial@7e201000
      Node 0x216c: bluetooth
    Node 0x21f4: mmc@7e202000
    Node 0x230c: i2s@7e203000
    Node 0x23f8: spi@7e204000
      Node 0x2528: spidev@0
      Node 0x25a0: spidev@1
    Node 0x261c: i2c@7e205000
    Node 0x26e8: i2c0mux
      Node 0x27a8: i2c@0
      Node 0x27f8: i2c@1
    Node 0x284c: dpi@7e208000
    Node 0x2914: dsi@7e209000
    Node 0x2a50: aux@7e215000
    Node 0x2ad0: serial@7e215040
      Node 0x2b9c: bluetooth
    Node 0x2c24: spi@7e215080
    Node 0x2ce4: spi@7e2150c0
    Node 0x2da4: pwm@7e20c000
    Node 0x2e60: hvs@7e400000
    Node 0x2ee8: dsi@7e700000
    Node 0x3024: i2c@7e804000
    Node 0x3110: vec@7e806000
    Node 0x31c0: usb@7e980000
      Node 0x32d0: usb-port@1
        Node 0x3328: usb-port@1
          Node 0x3380: ethernet@1
            Node 0x33dc: mdio
              Node 0x3408: ethernet-phy@1
    Node 0x3494: dma@7e007000
    Node 0x3608: interrupt-controller@7e00b200
    Node 0x36b8: watchdog@7e100000
    Node 0x37ac: rng@7e104000
    Node 0x381c: pixelvalve@7e206000
    Node 0x38b0: pixelvalve@7e207000
    Node 0x3944: thermal@7e212000
    Node 0x39e0: i2c@7e805000
    Node 0x3aac: pixelvalve@7e807000
    Node 0x3b40: hdmi@7e902000
    Node 0x3c88: v3d@7ec00000
    Node 0x3d20: gpu
    Node 0x3d74: local_intc@40000000
    Node 0x3e04: mmc@7e300000
    Node 0x3f18: mmcnr@7e300000
    Node 0x403c: firmwarekms@7e600000
    Node 0x40e8: smi@7e600000
    Node 0x41d0: csi@7e800000
    Node 0x42d4: csi@7e801000
    Node 0x43e8: axiperf
    Node 0x4470: firmware
      Node 0x4500: clocks
      Node 0x4558: expgpio
    Node 0x45d4: power
    Node 0x463c: mailbox@7e00b840
      Node 0x46c0: bcm2835_audio
    Node 0x4754: gpiomem
    Node 0x479c: fb
    Node 0x47f8: vcsm
    Node 0x4864: sound
  Node 0x48a0: clocks
    Node 0x48ac: clk-osc
    Node 0x4914: clk-usb
  Node 0x4980: phy
  Node 0x49c8: arm-pmu
  Node 0x4a30: timer
  Node 0x4aa4: cpus
    Node 0x4b00: cpu@0
    Node 0x4b98: cpu@1
    Node 0x4c30: cpu@2
    Node 0x4cc8: cpu@3
  Node 0x4d64: __overrides__
  Node 0x530c: leds
    Node 0x5340: act
    Node 0x53b0: pwr
  Node 0x5414: fixedregulator_3v3
  Node 0x5498: fixedregulator_5v0
  Node 0x551c: memory@0
  Node 0x5558: cam1_reg
  Node 0x55ec: __symbols__
root@freebsd2:~ # ls -l /dev/openfirm
root@freebsd2:~ # ofwdump -ar
Node 0x48: 
  Node 0x118: framebuffer@3eaf0000
  Node 0x1c8: psci
  Node 0x204: system
  Node 0x238: axi
    Node 0x240: vc_mem
  Node 0x26c: aliases
  Node 0x708: chosen
    Node 0x890: bootloader
  Node 0x8a8: reserved-memory
    Node 0x8f8: linux,cma
  Node 0x964: thermal-zones
    Node 0x978: cpu-thermal
      Node 0x9dc: cooling-maps
  Node 0x9fc: soc
    Node 0xa88: txp@7e004000
    Node 0xb10: cprman@7e101000
    Node 0xbcc: mailbox@7e00b880
    Node 0xc50: gpio@7e200000
      Node 0xd10: mmc_pins
      Node 0xd8c: dpi_gpio0
      Node 0xe3c: emmc_gpio22
      Node 0xe94: emmc_gpio34
      Node 0xf10: emmc_gpio48
      Node 0xf68: gpclk0_gpio4
      Node 0xfb0: gpclk1_gpio5
      Node 0xff8: gpclk1_gpio42
      Node 0x1040: gpclk1_gpio44
      Node 0x1088: gpclk2_gpio6
      Node 0x10d0: gpclk2_gpio43
      Node 0x1128: i2c0_gpio0
      Node 0x1170: i2c0_gpio28
      Node 0x11b8: i2c0_gpio44
      Node 0x1200: i2c1_gpio2
      Node 0x1248: i2c1_gpio44
      Node 0x1290: jtag_gpio22
      Node 0x12e8: pcm_gpio18
      Node 0x1338: pcm_gpio28
      Node 0x1388: sdhost_gpio48
      Node 0x13e4: spi0_gpio7
      Node 0x1438: spi0_gpio35
      Node 0x148c: spi1_gpio16
      Node 0x14e4: spi2_gpio40
      Node 0x153c: uart0_gpio14
      Node 0x1588: uart0_ctsrts_gpio16
      Node 0x15d8: uart0_ctsrts_gpio30
      Node 0x163c: uart0_gpio32
      Node 0x169c: uart0_gpio36
      Node 0x16e8: uart0_ctsrts_gpio38
      Node 0x1738: uart1_gpio14
      Node 0x1784: uart1_ctsrts_gpio16
      Node 0x17d4: uart1_gpio32
      Node 0x1820: uart1_ctsrts_gpio30
      Node 0x1870: uart1_gpio40
      Node 0x18bc: uart1_ctsrts_gpio42
      Node 0x190c: i2c_slave_gpio18
      Node 0x1964: jtag_gpio4
      Node 0x19b8: pwm0_gpio12
      Node 0x19fc: pwm0_gpio18
      Node 0x1a40: pwm0_gpio40
      Node 0x1a84: pwm1_gpio13
      Node 0x1ac8: pwm1_gpio19
      Node 0x1b0c: pwm1_gpio41
      Node 0x1b50: pwm1_gpio45
      Node 0x1b94: dpi_18bit_gpio0
      Node 0x1c30: dpi_18bit_gpio2
      Node 0x1cc4: gpioout
      Node 0x1d04: alt0
      Node 0x1d5c: spi0_pins
      Node 0x1da8: spi0_cs_pins
      Node 0x1df4: i2c0
      Node 0x1e38: i2c1
      Node 0x1e7c: i2s
      Node 0x1ec4: sdio_pins
      Node 0x1f40: bt_pins
      Node 0x1f84: uart0_pins
      Node 0x1fcc: uart1_pins
      Node 0x2014: audio_pins
    Node 0x2060: serial@7e201000
      Node 0x216c: bluetooth
    Node 0x21f4: mmc@7e202000
    Node 0x230c: i2s@7e203000
    Node 0x23f8: spi@7e204000
      Node 0x2528: spidev@0
      Node 0x25a0: spidev@1
    Node 0x261c: i2c@7e205000
    Node 0x26e8: i2c0mux
      Node 0x27a8: i2c@0
      Node 0x27f8: i2c@1
    Node 0x284c: dpi@7e208000
    Node 0x2914: dsi@7e209000
    Node 0x2a50: aux@7e215000
    Node 0x2ad0: serial@7e215040
      Node 0x2b9c: bluetooth
    Node 0x2c24: spi@7e215080
    Node 0x2ce4: spi@7e2150c0
    Node 0x2da4: pwm@7e20c000
    Node 0x2e60: hvs@7e400000
    Node 0x2ee8: dsi@7e700000
    Node 0x3024: i2c@7e804000
    Node 0x3110: vec@7e806000
    Node 0x31c0: usb@7e980000
      Node 0x32d0: usb-port@1
        Node 0x3328: usb-port@1
          Node 0x3380: ethernet@1
            Node 0x33dc: mdio
              Node 0x3408: ethernet-phy@1
    Node 0x3494: dma@7e007000
    Node 0x3608: interrupt-controller@7e00b200
    Node 0x36b8: watchdog@7e100000
    Node 0x37ac: rng@7e104000
    Node 0x381c: pixelvalve@7e206000
    Node 0x38b0: pixelvalve@7e207000
    Node 0x3944: thermal@7e212000
    Node 0x39e0: i2c@7e805000
    Node 0x3aac: pixelvalve@7e807000
    Node 0x3b40: hdmi@7e902000
    Node 0x3c88: v3d@7ec00000
    Node 0x3d20: gpu
    Node 0x3d74: local_intc@40000000
    Node 0x3e04: mmc@7e300000
    Node 0x3f18: mmcnr@7e300000
    Node 0x403c: firmwarekms@7e600000
    Node 0x40e8: smi@7e600000
    Node 0x41d0: csi@7e800000
    Node 0x42d4: csi@7e801000
    Node 0x43e8: axiperf
    Node 0x4470: firmware
      Node 0x4500: clocks
      Node 0x4558: expgpio
    Node 0x45d4: power
    Node 0x463c: mailbox@7e00b840
      Node 0x46c0: bcm2835_audio
    Node 0x4754: gpiomem
    Node 0x479c: fb
    Node 0x47f8: vcsm
    Node 0x4864: sound
  Node 0x48a0: clocks
    Node 0x48ac: clk-osc
    Node 0x4914: clk-usb
  Node 0x4980: phy
  Node 0x49c8: arm-pmu
  Node 0x4a30: timer
  Node 0x4aa4: cpus
    Node 0x4b00: cpu@0
    Node 0x4b98: cpu@1
    Node 0x4c30: cpu@2
    Node 0x4cc8: cpu@3
  Node 0x4d64: __overrides__
  Node 0x530c: leds
    Node 0x5340: act
    Node 0x53b0: pwr
  Node 0x5414: fixedregulator_3v3
  Node 0x5498: fixedregulator_5v0
  Node 0x551c: memory@0
  Node 0x5558: cam1_reg
  Node 0x55ec: __symbols__
  
---------------------------------------- 
# ofwdump -p /soc8555/ethernet@24000
Node 0xc063124c: ethernet@24000
  #address-cells:
    00 00 00 01 
  #size-cells:
    00 00 00 01 
  cell-index:
    00 00 00 00 
  device_type:
    6e 65 74 77 6f 72 6b 00 
    'network'
  model:
    54 53 45 43 00 
    'TSEC'
  compatible:
    67 69 61 6e 66 61 72 00 
    'gianfar'
  reg:
    00 02 40 00 00 00 10 00 
  ranges:
    00 00 00 00 00 02 40 00 00 00 10 00 
  local-mac-address:
    00 00 00 00 00 00 
  interrupts:
    00 00 00 1d 00 00 00 02 00 00 00 1e 00 00 00 02 00 00 00 22 
    00 00 00 02 
  interrupt-parent:
    00 00 00 02 
  tbi-handle:
    00 00 00 03 
  phy-handle:
    00 00 00 04 

========================================
DISTRO DATA
----------------------------------------

DistroData::get()

NOTE: live cd TAILS which is a Debian based security live cd uses non 
standard syntax in /etc/os-release

Since it is a  live cd, the distro id could include this, but if I start 
adding these types of single unique case tiny user base logics, the distro  
id section will mushroom out of control. 

So this was removed, but this is one way of detecting tails and then 
correcting the os-release field name syntax. 

The proper course here is to file an issue report against tails and have 
them correct the os-release syntax, not to correct it for them.

# why did tails feel it necessary to use non standard field names? who knows.
	if (-e '/etc/dpkg/origins/Tails'){
		@content = map {
		$_ =~ s/^TAILS_PRODUCT_NAME=/NAME=/;
		$_ =~ s/^TAILS_VERSION_ID=/VERSION_ID=/;
		$_;
		} @content;
	}

For coming UBUNTU version:
ubuntu-distro-info --devel --fullname


========================================
GRAPHIC DATA
----------------------------------------

----------------------------------------
MONITORS:

https://metacpan.org/pod/Parse::EDID

Note: this is MUCH better data than you get from the read-edid tools 
get-edid/parse-edid, by a large factor.

----------------------------------------
https://www.perl.com/article/21/2013/4/21/Read-an-entire-file-into-a-string/

Slurping files without modules

Slurping files is not complicated though and requires just a few lines of Perl. First I open a filehandle:

open my $fh, '<', $edid_file or die "Can't open file $!";

Now I can read the file contents:

my $raw_edid = do { local $/; <$fh> };

then: $edid_data = Parse::EDID::parse_edid($raw_edid)

which returns a hash reference filled with great data.

To install Parse::EDID from cpan if no package available.

sudo cpan App::cpanminus

You may need to install 'make' first, make sure you have it or install will
exit with obscure failure message.

You may also need to install perl-local-lib (local::lib) as well.

then once cpanm is installed:

sudo cpanm Parse::EDID 

----------------------------------------
https://ask.fedoraproject.org/t/change-scaling-resolution-of-primary-monitor-from-bash-terminal/19892

If yes, the corresponding gsettings setting is:

org.gnome.desktop.interface text-scaling-factor

So you can get/set the value using gsettings on the terminal:

gsettings set org.gnome.desktop.interface text-scaling-factor 1.2

and so on.

----------------------------------------

========================================
LOGICAL DATA
----------------------------------------



----------------------------------------
sub display_output(){
----------------------------------------

https://linuxconfig.org/how-to-configure-your-monitors-with-xrandr-in-linux

Good explanation of monitor priority:
----------------------------------------
The results might look complex, but they’re really simple, once you break them 
down. Each heading is actually a listing for one of the ports on your graphics 
card. They’ll be something like DisplayPort-0 or DVI-D-0. Next to each one, 
you’ll see if it’s connected or disconnected. The connected ones are obviously 
the monitors that you have in use.

Next to that connection status, you’ll see whether that monitor is the primary. 
After that you’ll see a notation the current resolution of your monitor with 
position information, denoted by the plus signs. The first position is the x 
coordinate, and the second is the y. The primary monitor will have zeroes in 
these positions. A secondary monitor placed to the right, like in the image, 
will have +1920 or something similar in the x position.

Dual monitor set ups have some added flags that can be useful for positioning 
and priority. The --primary flag specifies the primary monitor. You can use the 
--left-of and --right-of flags to set the position of your other monitors. All 
together, it looks something like the example below.
----------------------------------------
https://unix.stackexchange.com/questions/667482/understanding-the-output-of-xrandr-query

----------------------------------------

If you have multiple displays, you can put them next to each other and/or under 
each other and imagine that this way you get a large total area on which things 
are displayed.

From the other direction, you can imagine that there is a large total area that 
is divided into the partial areas that are formed by your individual displays 
that are placed next to and under each other.

The line with Screen 0 refers to this large total area and indicates the minimum 
and maximum dimensions that this large total area can have. These dimensions 
depend on the hardware of the computer, e.g. the available memory of the 
graphics card(s).

"normal left inverted right" refer to whether the display you are looking at 
from the front is standing there not rotated, or rotated 90 degrees to the left, 
or rotated 180 degrees (upside down), or rotated 90 degrees to the right.

For the large total area, you can think of a Cartesian coordinate system that 
has an x-axis going to the right and a y-axis going down, and whose axis origin 
is in the upper left corner of this large total area.

x axis and y axis indicate the coordinates where the upper left corner of a 
single display should be placed in the large total area.

For example, if you have two displays side by side and the left display is 1366 
units wide, like your LVDS-device, then the upper left corner of this display in 
the large total area has the coordinates x-axis 0 and y-axis 0. If you don't 
want the left and the right display to show partially the same things, then the 
upper left corner of the right display must be shifted 1366 units to the right 
on the large total area and have the coordinates x-axis 1366 and y-axis 0.

If you have installed e.g. the ARandR screen layout editor, you can save the 
xrandr command line for all your currently used screens by clicking on the menu 
"Layout" -> "Save as" as a .sh file, i.e. as a text file which should contain a 
shell script.

========================================
LOGICAL DATA
----------------------------------------
lvm_data()

these were for pvs:

@args = qw(vg_name vg_fmt vg_size vg_free vg_sysid lv_count
lv_name lv_size lv_health_status lv_parent pv_count 
pv_count pv_name dev_size pv_size pv_free pv_used pv_major pv_minor
seg_size devices metadata_devices segtype stripes);

========================================
PARTITION DATA
----------------------------------------

Issues arise with disk used totals with remote/distributed fs mounts and fuse.

----------------------------------------
https://www.linuxtoday.com/blog/user-space-file-systems/
----------------------------------------

There are many examples of file systems that use FUSE. Sometimes FUSE is used 
for prototyping or testing file systems or it is used as the file system itself. 
It is beyond the scope of this article to list all of them or even a good chunk 
of them, but some that you might recognize (or might not) include:

SSHFS This is a file system client that can mount and interact with directories 
and files on a remote system using sftp. Very handy file system for mounting 
remote file systems.

GmailFS This FUSE based file system was written to use Google’s email storage as 
a file system. Originally it used the gmail web interface but this kept 
changing. The previous link takes you to a new version of GmailFS that uses IMAP 
to use the gmail email space as a file system. One of the interesting aspects of 
this file system is that it’s written in Python.

EncFS This FUSE based file system provides an encrypted file system for Linux. 
For a discussion about encrypted file systems and Linux please read this.

NTFS-3G NTFS-3G gives you read/write access to a Windows NTFS file system. 
According to the website it works with Windows XP, Windows Server 2003, Windows 
2000, Windows Vista, Windows Server 2008 and Windows 7 NTFS file systems.

archivemount This file system allows you to mount archive files such as tar 
(.tar) or gzipped tar files (.tar.gz) to a mount point and interact with them 
including reading and writing. It’s a very cool way to check out the contents of 
a .tar.gz file before uncompressing and untarring it, especially if you only 
need one file from it. It also allows you to easily manipulate and create 
.tar.gz files.

ZFS-Fuse This file system allows you to create, mount, use, and manage ZFS file 
systems under Linux. Recall that the licensing of ZFS is not compatible with GPL 
so interfacing ZFS with FUSE keeps ZFS as a user-space application which runs on 
Linux and doesn’t violate any licensing. So if you want ZFS on Linux, this is 
your best option.

CloudStore CloudStore (kosmosfs/kfs) is a distributed file system that is 
integrated with Hadoop and Hypertable. MountableHDFS There are several projects 
that allow you to mount a Hadoop file system (HDFS) and interact with it as you 
would a normal POSIX-style file system. For example, you can do an “ls” or a 
“cp” or a “mv” on HDFS using these FUSE based projects. This also means you can 
use POSIX conforming applications to read/write to HDFS without having to use 
the API.

GlusterFS This is a high performance, distributed file system that uses a 
concept of “translators” that allow you to create file systems with various 
capabilities including mirroring and replication, striping, load-balancing, disk 
caching, read-ahead, write-behind, and self-healing. One of the strengths of 
GlusterFS is that it doesn’t use metadata but rather relies on the knowledge of 
the file layout and the underlying file system.

MooseFS MooseFS is a distributed fault-tolerant file system with several unique 
features: when you delete files MooseFS retains them for a period of time so 
they can be recovered; it also can create coherent snapshots of files even while 
the file is being accessed or written.

s3fs This FUSE file system allows you to take a S3 bucket and mount it as a 
local file system. There is commercial support for this type of service from 
Subcloud.

As you can see there are a fair number of very usable FUSE based file systems 
ranging from something as seemingly simple as mounting .tar.gz files as a file 
system giving you the ability to read and write to them without having to 
uncompress and untar them, to encrypted file systems, to high performance 
distributed parallel file systems.

----------------------------------------
see sectoin on FUSE-based file systems
https://wiki.archlinux.org/title/file_systems
----------------------------------------

----------------------------------------
Stackable file systems

aufs — Advanced Multi-layered Unification Filesystem, a FUSE based union 
filesystem, a complete rewrite of Unionfs, was rejected from Linux mainline and 
instead OverlayFS was merged into the Linux Kernel.

http://aufs.sourceforge.net || linux-aufsAUR

eCryptfs — The Enterprise Cryptographic Filesystem is a package of disk 
encryption software for Linux. It is implemented as a POSIX-compliant 
filesystem-level encryption layer, aiming to offer functionality similar to that 
of GnuPG at the operating system level.

https://ecryptfs.org || ecryptfs-utils

mergerfs — a FUSE based union filesystem.

https://github.com/trapexit/mergerfs || mergerfsAUR

mhddfs — Multi-HDD FUSE filesystem, a FUSE based union filesystem.

http://mhddfs.uvw.ru || mhddfsAUR

overlayfs — OverlayFS is a filesystem service for Linux which implements a union 
mount for other file systems.

https://www.kernel.org/doc/html/latest/filesystems/overlayfs.html || linux

Unionfs — Unionfs is a filesystem service for Linux, FreeBSD and NetBSD which 
implements a union mount for other file systems.

https://unionfs.filesystems.org/ || not packaged? search in AUR

unionfs-fuse — A user space Unionfs implementation.

https://github.com/rpodgorny/unionfs-fuse || unionfs-fuse
----------------------------------------
Read-only file systems

EROFS — Enhanced Read-Only File System is a lightweight read-only file system, 
it aims to improve performance and compress storage capacity.

https://www.kernel.org/doc/html/latest/filesystems/erofs.html || erofs-utils

SquashFS — SquashFS is a compressed read only filesystem. SquashFS compresses 
files, inodes and directories, and supports block sizes up to 1 MB for greater 
compression.

https://github.com/plougher/squashfs-tools || squashfs-tools
----------------------------------------
Clustered file systems

Ceph — Unified, distributed storage system designed for excellent performance, 
reliability and scalability.

https://ceph.com/ || ceph

Glusterfs — Cluster file system capable of scaling to several peta-bytes.

https://www.gluster.org/ || glusterfs

IPFS — A peer-to-peer hypermedia protocol to make the web faster, safer, and 
more open. IPFS aims replace HTTP and build a better web for all of us. Uses 
blocks to store parts of a file, each network node stores only content it is 
interested, provides deduplication, distribution, scalable system limited only 
by users. (currently in alpha)

https://ipfs.io/ || go-ipfs

MooseFS — MooseFS is a fault tolerant, highly available and high performance 
scale-out network distributed file system.

https://moosefs.com || moosefs

OpenAFS — Open source implementation of the AFS distributed file system

https://www.openafs.org || openafsAUR

OrangeFS — OrangeFS is a scale-out network file system designed for 
transparently accessing multi-server-based disk storage, in parallel. Has 
optimized MPI-IO support for parallel and distributed applications. Simplifies 
the use of parallel storage not only for Linux clients, but also for Windows, 
Hadoop, and WebDAV. POSIX-compatible. Part of Linux kernel since version 4.6.

https://www.orangefs.org/ || not packaged? search in AUR

Sheepdog — Distributed object storage system for volume and container services 
and manages the disks and nodes intelligently.

https://sheepdog.github.io/sheepdog/ || sheepdogAUR

Tahoe-LAFS — Tahoe Least-Authority Filesystem is a free and open, secure, 
decentralized, fault-tolerant, peer-to-peer distributed data store and 
distributed file system.

https://tahoe-lafs.org/ || tahoe-lafsAUR
----------------------------------------
Shared-disk file system

GFS2 — GFS2 allows all members of a cluster to have direct concurrent access to 
the same shared block storage

https://pagure.io/gfs2-utils || gfs2-utilsAUR

OCFS2 — The Oracle Cluster File System (version 2) is a shared disk file system 
developed by Oracle Corporation and released under the GNU General Public 
License

https://oss.oracle.com/projects/ocfs2/ || ocfs2-toolsAUR

VMware VMFS — VMware's VMFS (Virtual Machine File System) is used by the 
company's flagship server virtualization suite, vSphere.

https://www.vmware.com/products/vi/esx/vmfs.html || vmfs-toolsAUR

========================================
SERVICE DATA
----------------------------------------

Note: all use redirect of stderr to stdout to get errors, because most
send to stderr when service not found or present in system.

----------------------------------------
init [BSD]: tool: /etc/rc.d source: /etc/rc.d/
----------------------------------------

OpenBSD 6.3/6.8

----------------------------------------

[loaded]
/etc/rc.d/ntpd check 
ntpd(ok)

[stopped]
/etc/rc.d/ntpd check 
ntpd(failed)

[not exist]
/etc/rc.d/ntp check 
ksh: /etc/rc.d/ntp: not found

[unknown directive]
/etc/rc.d/sshd fred
usage: /etc/rc.d/sshd [-df] start|stop|restart|reload|check

----------------------------------------
init [BSD]: tool: rc-service source: /etc/rc.d/
----------------------------------------

OpenRC

GhostBSD 21.01.20 

Could also use just /etc/rc.d/<service> <command> but mappings may  not 
always be the same.

----------------------------------------

[running]
rc-service ntpd status
 * status: started 

[stopped]
rc-service ntpd status 
 * status: stopped 

[unrecognized rc-service directive]
rc-service ntpd disable 
 * ntpd: unknown function 'disable'

[not exist]
rc-service ntp status 
 * rc-service: service 'ntp' does not exist 

----------------------------------------
init [BSD]: tool: service source: /etc/rc.d/
----------------------------------------

Nomad 1.4 / FreeBSD 12.2

----------------------------------------

[loaded]
service ntpd status 
ntpd is running as pid 1046

[stopped]
service ntpd status 
ntpd is not running

[disabled]
Cannot 'status' ntpd. Set ntpd_enable to YES in /etc/rc.conf or use 'onestatus' instead of status

[not exist]
service ntp status
ntp does not exist in /etc/rc.d or the local startup
directories (/usr.local/etc/rc.d), or is not executable

----------------------------------------
init [BSD]: tool: service source: /etc/rc.d/
----------------------------------------

NetBSD 9.1 

----------------------------------------

[running]
/usr/sbin/service ntpd status 
ntpd is running as pid 311. 

[stopped]
/usr/sbin/service ntpd status
ntpd is not running.

[unknown command]
/usr/sbin/service ntpd disable 
/etc/rc.d/ntpd: unknown directive 'disable'
Usage: /etc/rc.d/ntpd [fast|force|one](start stop restart rcvar status poll)

[not exists]
/usr/sbin/service ntp status
ntp does not exist in /etc/rc.d

----------------------------------------
runit: tool: sv source: /etc/sv/
----------------------------------------

Void Linux [earlier versions at least]

----------------------------------------

[running]
sv status udevd 
run: udevd: (pid 631) 641s

[down, enabled]
sv status sshd 
down: sshd: 9s, normally up

[not exist]
sv status ntpd 
fail: ntpd: unable to change to service directory: file does not exist

[unknown directive]
sv fred sshd 
usage: sv [-v] [-w sec] command service

----------------------------------------
systemd: tool: systemctl 
----------------------------------------

syntax: systemctl [start|stop|status] <service>
note: presence or absence of 'd' creates odd results

----------------------------------------

[loaded]
systemctl status bluetooth 
● bluetooth.service - Bluetooth service
     Loaded: loaded (/lib/systemd/system/bluetooth.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-03-07 22:17:52 PST; 1 day 14h ago
       Docs: man:bluetoothd(8)
   Main PID: 1046 (bluetoothd)
     Status: "Running"
      Tasks: 1 (limit: 38452)
     Memory: 5.0M
     CGroup: /system.slice/bluetooth.service
             └─1046 /usr/libexec/bluetooth/bluetoothd

Warning: some journal files were not opened due to insufficient permissions.

[stopped]
systemctl status bluetooth 
● bluetooth.service - Bluetooth service
     Loaded: loaded (/lib/systemd/system/bluetooth.service; enabled; vendor preset: enabled)
     Active: inactive (dead)
       Docs: man:bluetoothd(8)

[disabled]
● bluetooth.service - Bluetooth service
     Loaded: loaded (/lib/systemd/system/bluetooth.service; disabled; vendor preset: enabled)
     Active: inactive (dead)
       Docs: man:bluetoothd(8)

[not exists]
systemctl status bluetoothd
Unit bluetoothd.service could not be found.

[unknown directive]
systemctl fred bluetooth
Unknown command verb fred.

----------------------------------------
SysVinit: tool: service source: /etc/init.d
----------------------------------------

Old antiX 17.1 / debian stretch

----------------------------------------

[stopped]
service elogind status
[FAIL] elogind is not running ... failed!

[started]
service cron status
[ ok ] cron is running  
(note the space around the 'ok')

[not exists]
service ntpd status
ntpd: unrecognized service 

========================================
TTY DATA
----------------------------------------

----------------------------------------
What is the TTY major number of your Unix?
----------------------------------------

https://unix.stackexchange.com/questions/127259/what-is-the-tty-major-number-of-your-unix/127260#127260

Unix version 7 (1979):

# ls -l /dev/console /dev/tty?*
crw--w--w- 1 root    0,  0 Sep 22 06:46 /dev/console
crw-rw-r-- 1 root    0,  1 Sep 22 05:47 /dev/tty1
crw-rw-r-- 1 root    0,  2 Sep 22 05:47 /dev/tty2

(no pty there yet)
Linux 3.2.0 (debian wheezy).

Note: you can also find these by searching /dev for owned by group tty and dialout. That's a Debian thing.

    Virtual consoles
        /dev/tty[0-9]*: 4
    Real serial ports:
        /dev/ttyS[0-9]+: 4
    Pseudo terminals:
        /dev/pts/[0-9]+: 136
        /dev/pts/ptmx: 5
    FTDI USB serial port:
        /dev/ttyUSB[0-9]+: 188
    USB serial port: (AVR embedded USB/Arduino Uno)
        /dev/ttyACM[0-9]+: 166

Linux 3.4.0 (Android 4.4.2 / Nexus 5)

Note: has all linux ones plus:

    ttyACM (cell modem control)
        (no /dev entry, apparently): 166
    ttyHSL (Bluetooth)
        /dev/ttyHSL0: 247
    ttyHS (Bluetooth)
        /dev/ttyHS99: 248

Darwin 13.1.0 (MacOS 10.9.2):

    Real serial ports:
        /dev/ttys[0-9a-f]: 4
    Pseudo terminals:
        /dev/ttys[0-9]{3}: 16
    FTDI USB serial port:
        /dev/tty.usbserial.*: 18
    USB serial port: (AVR embedded USB/Arduino Uno)
        /dev/tty.usbmodem.*: 18

Solaris 10 x86/amd64:

    Pseudo terminals:
        /dev/pty[p-r][0-9a-f] (pty master): 25
        /dev/tty[p-r][0-9a-f] (pty slave): 26
        /dev/pts/[0-9]+: 24
        /dev/ptmx: 23

    Serial devices:
        /dev/tty[abc...] aka /dev/term/[abc...] or /dev/tty0[012..] (uart serial, also ): 106
        also as /dev/ttyd[012...] but with different interface (dial, modem) also on 106 but high minors.

OpenBSD 6.0

As documented in the commentary in /dev/MAKEDEV

    PC/AT UART serial ports:
        /dev/tty[0-7][0-9a-f]: 8
        /dev/cua[0-7][0-9a-f]: 8
    Cyclades serial ports:
        /dev/ttyc*: 38
        /dev/cuac*: 38
    Virtio serial ports:
        /dev/ttyVI*: 94
    USB serial ports:
        /dev/ttyU[0-3]: 66
        /dev/cuaU[0-3]: 66
    wscons terminals:
        /dev/tty[C-J][0-b]: 12
    Pseudo terminal master and slave (non-UNIX 98)
        /dev/pty[p-zP-T][0-9a-zA-Z]: 6
        /dev/tty[p-zP-T][0-9a-zA-Z]: 5

FreeBSD 10.0 and TrueOS

FreeBSD (and its derivatives such as TrueOS) is where your idea shows a fatal flaw. There is no major+minor device number scheme in FreeBSD.

The devfs pseudo-filesystem on FreeBSD, conventionally mounted at /dev, does not use a major+minor system for grouping devices into "major" classes at all. Rather, the rdev for the device is the same as its i-node number in the pseudo-filesystem, with i-nodes simply assigned in ascending order as device nodes are generated, depending from the exact hardware on the machine at hand at the time.

So device number cannot be used as a shortcut for isatty().


----------------------------------------
What is the difference between ttys0, ttyUSB0 and ttyAMA0 in Linux?
----------------------------------------

https://unix.stackexchange.com/questions/307390/what-is-the-difference-between-ttys0-ttyusb0-and-ttyama0-in-linux/307394

-----------------------
ttyS0
-----------------------

What you get on the host when you connect to target with this:

[image] [serial adapter cable]

This port is not present on most laptops or small devboards, but is still present on many desktops, and is very convenient for OS developers as mentioned at: https://askubuntu.com/questions/104771/where-are-kernel-panic-logs/932380#932380

You also get it with qemu -device isa-serial.

For example could hook up two desktops with one of those cables, and communicate directly between them to get a shell on the remote desktop from your own. From Linux computer 1 you would run:

screen /dev/ttyS0 115200

and then computer 2 would reply with the login prompt, and then you can log in from computer 1 into computer 2.

So this is a bit like SSH and can be seen as an early form of networking. I think those cables cannot be too long or else the signal is lost though, and you can't do as much without the TCP/IP addressing/packet mechanisms.

-----------------------
ttyUSB0
-----------------------

What you get on host when using something like:

[image] usb > tty adapter cable

I also get it when I connect the GPIOs of my Raspberry Pi to my laptop to get a shell on a Raspberry Pi without a screen!

[image] usb laptop to raspi gpio

And another more integrated RPI connector version of the above:

[image] usb gpio direct connector

A concrete RPI example at: https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545

-----------------------
ttyAMA0
-----------------------

An ARM thing as mentioned by Sato.

Haven't run into that for real hardware, will post pics when I do. I think I would be able to connect my desktop with a serial port to my RPI with that interface: https://raspberrypi.stackexchange.com/questions/69697/what-is-dev-ttyama0

But I've used it with QEMU: https://github.com/buildroot/buildroot/tree/27d7ef126bc7f4eb1a757128466befa11245bbfd/board/qemu/arm-versatile

It seem that AMA is a shortened form of AMBA? https://www.raspberrypi.org/forums/viewtopic.php?t=8075 But why would they shorten a 4 character acronym?!

The only interesting Linux kernel hits are under: https://github.com/torvalds/linux/blob/v4.16/drivers/tty/serial/amba-pl011.c#L2488 so it seems to be strictly linked to the PL011: http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0183g/index.html which is a UART controller licensed by ARM, which I think is the dominating implementation.

[note: this is what raspberry pi uses for bluetooth on at least pi 4, maybe pi 3 too.]

-----------------------
ttySAC0
-----------------------

Kamil reported that his Samsung Artik 710, so another one for the collection.

================================================================================
SECONDARY DATA
--------------------------------------------------------------------------------

========================================
LIVE CD LOGINS
----------------------------------------

archex:
un: exton
pw: live

mint:
un: mint
pw: <empty>

peppermint: os boxes
un: osboxes
pw: osboxes.org
root pw: osboxes.org

trisquel 
un: trisquel 
pw: <empty>

zorin: 
OLD:
un: live 
pw: <empty>
NEW:
un: zorin 
pw: none required, it logs in

smartos:
un: root
pw: root 
linux-solaris cheat sheet: https://wiki.smartos.org/display/DOC/The+Linux-to-SmartOS+Cheat+Sheet

========================================
DISTRO DATA
----------------------------------------

You have to use:

PGK_SRC=http://nycdn.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/7.2/All

to get binaries, but netbsd lags significantly behind its release versions unfortunately so check:

http://nycdn.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/

to see which the latest version that supports binary packages is.


================================================================================
DATA ANALYSIS
--------------------------------------------------------------------------------

========================================
FIND FILE IN *.tar.gz
----------------------------------------

find ./ -iname "*.tar.gz" -exec bash -c 'result=$(set -o pipefail ; echo "{}" ; tar -tf {} | grep -i "system-cmd-sensors-absent" | sed "s/^/    /") ; test $? -eq 0 && printf "$result\n"' \;

========================================
get rid of arrays/hashes passed whole instead of by reference to subs
----------------------------------------

# find the subs:

grep -En '[a-z]\([^(]*@[^)]+\)' pinxi | grep -Ev '(#|log_data\(|scalar[\( ]|sort\(|\\@|chomp|if )'

grep -En '[a-z]\([^(]*@[^)]+\)' pinxi | grep -Ev '(^[[:space:]]*#|log_data\(|scalar[\( ]|sort\(|\\@|chomp)'

grep -En '[a-z]\([^(]*%[^)]+\)' pinxi | grep -Ev '(#|sprint|log_data\(|scalar[\( ]|sort {|sort\(|\\%|chomp|if )'


================================================================================
OS DATA
--------------------------------------------------------------------------------

========================================
BSD DATA
----------------------------------------

----------------------------------------
Multibooting OpenBSD
----------------------------------------
source https://srobb.net/openbsdmultiboot.html

Preserving this here because websites have a tendency to go away, especially 
ones like this.

Note: make the type a6 partition in linux, not the openbsd installer, it's 
super easy to make a mistake with fdisk. I prefer cfisk, it's more human 
friendly, but otherwise, it's pretty much as simple as he says here, OpenBSD
will find its openbsd formatted partition, figure that is the one you want 
to put openbsd on. Keep in mind, openbsd will put itself onto that partition 
in many slices, so make sure it's big enough for your needs, I don't know
how ffs handles resizings etc.

----------------------------------------

I've used this method from 5.6 up through -current (while 6.2 is the release).

According to the OpenBSD FAQ, multibooting is non-trivial. Despite their 
somewhat dire warnings, it's not that difficult if you know how to do it. 
The usual caveats apply, it's always better to have backups, there is always 
the risk of losing what is already on the disk.

This is assuming the newcomer has a bit of knowledge, a machine with Linux 
installed, and a free partition. It does not have to be a primary partition, 
a logical partition inside a Linux extended partition works just as well. 
I've used this method with OpenBSD-5.6 through snapshots following 6.2.

Once one has said free partition, begin the OpenBSD installation. When it 
comes to what part of the disk to use, you can choose e, as in edit. In our 
example, we have a 4 partition MBR layout. We will use the last partition, 
partition 4 in Linux fdisk. It will show as 3 in OpenBSD's, with partitions 
labeled 0-3. Once we've chosen e, we will see fdisk: 1>. We then type

edit 3

3 is the Linux /dev/sda4 partition.

It will print the disk id (in this case, the filesystem type, which would 
be 83 if it had been a Linux partition), and some other information such as 
cylinders, heads and sectors. Type in a6, as we would in Linux fdisk. It will 
ask if you wish to edit in CHS mode (Cylinder, Head, Sector) with a default 
of n for no. Hit enter to take the default. It will then show the offset (start) 
and size, which will be what you see if you had just typed p for print. Accept 
the defaults given. Now hit p to be sure it's what you want. It should now 
show partition 3 as id A6, OpenBSD.

If you're confident of your changes, you can type write and then quit. (Or just 
quit, either one will save the changes). Typing exit will exit fdisk without 
saving changes. Many other programs use opposite terminology, exit saves changes 
and quit discards, so be careful. You can also type abort, which will, as expected, 
just exit the program without saving changes, though if this is done during 
installation (as opposed to using a shell and just typing fdisk -e sd0, the 
OpenBSD terminology for the disk), it won't exit completely, it will bring 
you back to the dialog of whether you wish to use the whole disk, or edit.

OpenBSD can also be installed on an extended partition. In that case, it may 
be easier to use Linux's fdisk prior to installation. In this case, let's say 
we have 3 primary and one extended partition, with, in Linux terminology, 
drives 5 and 6 as logical partitions. We're going to use partition 6 for 
OpenBSD. So, while in Linux use the following sequence

fdisk /dev/sda
t  
6 
a6  
w 

Toggle the type of partition
Choosing partition 6 in response to fdisk's question
a6 is the hex code number for an OpenBSD partition
write your changes.

You now have an OpenBSD partition. At this point, you can reboot with 
your OpenBSD install media, whether it be USB, CD, or anything else. 
After being asked the usual install questions, after it chooses the disk 
and asks if you'd prefer to use DUIDs rather than device names in fstab, 
you should then see a listing of your partitions, including an OpenBSD 
partition. The choices should be

Use (W)hole disk, use the (O)penBSD area, or (E)dit the MBR [OpenBSD]

or something similar. Choose o, (case insensitive). That's it. The next 
screen allows you to edit the partitions within the OpenBSD slice or use 
installer auto defaults. Regardless, any changes you make to the disk will 
only affect that partition. Assuming you boot from grub2, used by most Linux 
distros these days, after installation, boot back into Linux and create 
a /boot/grub/custom.cfg (or /boot/grub2/custom.cfg in RedHat and RedHat 
based systems, such as CentOS and Fedora) that reads, if you installed 
to the fourth partition.

menuentry "OpenBSD" {
set root='(hd0,4)'
chainloader (hd0,4)+1
}

If you used partition 6 as we did with Linux's fdisk, you would change the 
hd0,4 entries above to hd0,6. If you reboot and select that menu entry, you 
will then boot into your OpenBSD installation.

This doesn't work on UEFI installs. It seems that one has to create an EFI 
partition, even if one already exists, but at present, I am still experimenting 
and hope to update this page at some point.

----------------------------------------
OpenBSD disklabel file systems:
----------------------------------------

This is to map disklabel fs to normal string versions

From: /usr/include/sys/disklabel.h

static char *fstypenames[] = {
0        "unused", 
1        "swap",
2        "Version6",
3        "Version7",
4        "SystemV",
5        "4.1BSD",
6        "Eighth-Edition",
7        "4.2BSD",
8        "MSDOS",
9        "4.4LFS",
10        "unknown",
11       "HPFS",
12        "ISO9660",
13        "boot",
14        "ADOS",
15        "HFS",
16        "ADFS",
17        "ext2fs",
18        "ccd",
19        "RAID",
20        "NTFS",
21        "UDF",
22        NULL
};

/* Similar to the above, but used for things like the mount command. */
static char *fstypesnames[] = {
        "",             /* 0 */
        "",             /* 1 */
        "",             /* 2 */
        "",             /* 3 */
        "",             /* 4 */
        "",             /* 5 */
        "",             /* 6 */
        "ffs",          /* 7 */
        "msdos",        /* 8 */
        "lfs",          /* 9 */
        "",             /* 10 */
        "",             /* 11 */
        "cd9660",       /* 12 */
        "",             /* 13 */
        "ados",         /* 14 */
        "",             /* 15 */
        "",             /* 16 */
        "ext2fs",       /* 17 */
        "",             /* 18 */
        "",             /* 19 */
        "ntfs",         /* 20 */
        "udf",          /* 21 */
        NULL
};

doas disklabel sd0
# /dev/rsd0c:
type: SCSI
disk: SCSI disk
label: TEAM T253X2128G 
duid: 31a46c352dcf4839
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 255
sectors/cylinder: 16065
cylinders: 15566
total sectors: 250069680
boundstart: 64
boundend: 250067790
drivedata: 0 

16 partitions:
#                size           offset  fstype [fsize bsize   cpg]
  a:          2097152               64  4.2BSD   2048 16384 12960 # /
  b:         16741760          2097216    swap                    # none
  c:        250069680                0  unused                    
  d:          8388608         18838976  4.2BSD   2048 16384 12960 # /tmp
  e:         29802016         27227584  4.2BSD   2048 16384 12960 # /var
  f:         12582912         57029600  4.2BSD   2048 16384 12960 # /usr
  g:          2097152         69612512  4.2BSD   2048 16384 12960 # /usr/X11R6
  h:         36295040         71709664  4.2BSD   2048 16384 12960 # /usr/local
  i:          4194304        108004704  4.2BSD   2048 16384 12960 # /usr/src
  j:         12582912        112199008  4.2BSD   2048 16384 12960 # /usr/obj
  k:        125285856        124781920  4.2BSD   2048 16384 12960 # /home
  
----------------------------------------
OpenBSD: Installint to emmc drive
----------------------------------------

source:  http://daemonforums.org/showthread.php?t=10867

post: 2
user: jggimi
  
If you don't want to dual boot with FBSD:

* install onto USB

* boot USB

* create an MBR or GPT on the eMMC drive with fdisk(8). If you create a GPT, 
don't forget to create the EFI partition for boot program storage.

* allocate partitions with disklabel(8). Automatic allocation would be advised.
format each partition with newfs(8)

* One partition at a time, use dump(8)/restore(8) to copy the USB system to eMMC.
remove the restoresymtable files in each restore()d partition. They don't hurt 
anything, but they won't be needed again.

* use installboot(8) to write boot blocks.

* Edit your fstab(5) to point to the new DUID!

* reboot!

----------------------------------------
bluetooth data [freebsd hccontrol]
----------------------------------------

https://forums.freebsd.org/threads/how-to-bluetooth.64797/

hccontrol -n ubt0hci inquiry
Inquiry result, num_responses=1
Inquiry result #0
BD_ADDR: 00:1a:7d:da:71:13
Page Scan Rep. Mode: 0x1
Page Scan Period Mode: 0x2
Page Scan Mode: 00
Class: 0c:01:0c
Clock offset: 0x1c5c
Inquiry complete. Status: No error [00]

----------------------------------------
dmesg data for ram
----------------------------------------

OpenBSD:

-------
ram:

spdmem0 at iic0 addr 0x52: 16GB DDR4 SDRAM PC4-17000 with thermal sensor
spdmem1 at iic0 addr 0x53: 16GB DDR4 SDRAM PC4-17000 with thermal sensor

spdmem0 at iic0 addr 0x50: 8GB DDR3 SDRAM PC3-14200 SO-DIMM

piixpm0 at pci0 dev 20 function 0 "AMD FCH SMBus" rev 0x51: SMI
iic1 at piixpm0
spdmem0 at iic1 addr 0x50: 32GB DDR4 SDRAM PC4-25600 SO-DIMM

spdmem0 at iic1 addr 0x50: 32GB DDR4 SDRAM PC4-25600 SO-DIMM

spdmem0 at iic0 addr 0x50: 4GB DDR3 SDRAM PC3-12800 SO-DIMM
spdmem1 at iic0 addr 0x52: 4GB DDR3 SDRAM PC3-12800 SO-DIMM

spdmem0 at iic1 addr 0x50: 16GB DDR4 SDRAM PC4-25600 SO-DIMM

spdmem0 at iic0 addr 0x50: 2GB DDR3 SDRAM PC3-10600
spdmem1 at iic0 addr 0x52: 2GB DDR3 SDRAM PC3-10600
spdmem2 at iic0 addr 0x53: 4GB DDR3 SDRAM PC3-12800

spdmem0 at iic0 addr 0x50: 2GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM
spdmem1 at iic0 addr 0x52: 1GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM

iic0 at ichiic0
spdmem0 at iic0 addr 0x50: 8GB DDR3 SDRAM PC3-12800 SO-DIMM
spdmem1 at iic0 addr 0x51: 4GB DDR3 SDRAM PC3-12800 SO-DIMM
isa0 at pcib0

spdmem0 at iic0 addr 0x50: 2GB DDR3 SDRAM PC3-8500 SO-DIMM

spdmem0 at iic0 addr 0x50: 16GB DDR4 SDRAM PC4-17000
spdmem1 at iic0 addr 0x51: 16GB DDR4 SDRAM PC4-17000
spdmem2 at iic0 addr 0x52: 16GB DDR4 SDRAM PC4-17000
spdmem3 at iic0 addr 0x53: 16GB DDR4 SDRAM PC4-17000

spdmem0 at iic0 addr 0x50: 16GB DDR4 SDRAM PC4-19200 SO-DIMM

sdtemp0 at iic0 addr 0x18: stts2002
sdtemp1 at iic0 addr 0x19: stts2002
sdtemp2 at iic0 addr 0x1a: stts2002
sdtemp3 at iic0 addr 0x1b: stts2002
spdmem0 at iic0 addr 0x50: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem1 at iic0 addr 0x51: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem2 at iic0 addr 0x52: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem3 at iic0 addr 0x53: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor

mem0 at mainbus0
spdmem0 at mem0: 1GB DDR SDRAM non-parity PC3200CL3.0
spdmem1 at mem0: 1GB DDR SDRAM non-parity PC3200CL3.0
spdmem2 at mem0: 256MB DDR SDRAM non-parity PC3200CL2.5
spdmem3 at mem0: 256MB DDR SDRAM non-parity PC3200CL2.5
memc0 at mainbus0: u3 rev 0xb3

sdtemp0 at iic0 addr 0x18: mcp98242
spdmem0 at iic0 addr 0x50: 1GB DDR3 SDRAM PC3-8500 SO-DIMM with thermal sensor
spdmem1 at iic0 addr 0x52: 2GB DDR3 SDRAM PC3-10600 SO-DIMM

sd0 at scsibus1 targ 0 lun 0: <ATA, WDC WD1003FBYX-0, 01.0> naa.50014ee20946ec61
sd0: 953869MB, 512 bytes/sector, 1953525168 sectors
ichiic0 at pci0 dev 31 function 3 "Intel 6 Series SMBus" rev 0x04: apic 0 int 19
iic0 at ichiic0
sdtemp0 at iic0 addr 0x18: stts2002
sdtemp1 at iic0 addr 0x19: stts2002
sdtemp2 at iic0 addr 0x1a: stts2002
sdtemp3 at iic0 addr 0x1b: stts2002
spdmem0 at iic0 addr 0x50: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem1 at iic0 addr 0x51: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem2 at iic0 addr 0x52: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor
spdmem3 at iic0 addr 0x53: 4GB DDR3 SDRAM ECC PC3-10600 with thermal sensor

mem0 at mainbus0
spdmem0 at mem0: 1GB DDR SDRAM non-parity PC3200CL3.0
spdmem1 at mem0: 1GB DDR SDRAM non-parity PC3200CL3.0
spdmem2 at mem0: 256MB DDR SDRAM non-parity PC3200CL2.5
spdmem3 at mem0: 256MB DDR SDRAM non-parity PC3200CL2.5
memc0 at mainbus0: u3 rev 0xb3

spdmem0 at iic0 addr 0x50: 4GB DDR3 SDRAM PC3-12800 SO-DIMM

spdmem0 at iic0 addr 0x50: 8GB DDR4 SDRAM PC4-25600 SO-DIMM

spdmem0 at iic0 addr 0x50: 8GB DDR4 SDRAM PC4-25600 SO-DIMM

spdmem0 at iic0 addr 0x50: 2GB DDR3 SDRAM PC3-10600 SO-DIMM
spdmem1 at iic0 addr 0x52: 2GB DDR3 SDRAM PC3-10600 SO-DIMM

spdmem0 at iic0 addr 0x52: 16GB DDR4 SDRAM PC4-19200
spdmem1 at iic0 addr 0x53: 16GB DDR4 SDRAM PC4-19200

spdmem0 at iic0 addr 0x52: 4GB DDR4 SDRAM PC4-19200 SO-DIMM

spdmem0 at iic0 addr 0x50: 4GB DDR3 SDRAM PC3-12800 SO-DIMM
spdmem1 at iic0 addr 0x52: 2GB DDR3 SDRAM PC3-12800 SO-DIMM

spdmem0 at iic0 addr 0x50: 2GB DDR2 SDRAM non-parity PC2-6400CL6 SO-DIMM
spdmem1 at iic0 addr 0x52: 2GB DDR2 SDRAM non-parity PC2-6400CL6 SO-DIMM

spdmem0 at iic0 addr 0x50: 1GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM
spdmem1 at iic0 addr 0x52: 2GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM

sdtemp0 at iic0 addr 0x18: mcp98243
sdtemp1 at iic0 addr 0x19: mcp98243
sdtemp2 at iic0 addr 0x1a: mcp98243
sdtemp3 at iic0 addr 0x1b: mcp98243
spdmem0 at iic0 addr 0x50: 8GB DDR3 SDRAM ECC PC3-12800 with thermal sensor
spdmem1 at iic0 addr 0x51: 8GB DDR3 SDRAM ECC PC3-12800 with thermal sensor
spdmem2 at iic0 addr 0x52: 8GB DDR3 SDRAM ECC PC3-12800 with thermal sensor
spdmem3 at iic0 addr 0x53: 8GB DDR3 SDRAM ECC PC3-12800 with thermal sensor

spdmem0 at iic0 addr 0x50: 2GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM
spdmem1 at iic0 addr 0x51: 2GB DDR2 SDRAM non-parity PC2-5300CL5 SO-DIMM

spdmem0 at iic0 addr 0x50: 2GB DDR2 SDRAM non-parity PC2-6400CL6 SO-DIMM

spdmem0 at iic0 addr 0x50: 4GB DDR4 SDRAM PC4-19200 SO-DIMM
spdmem1 at iic0 addr 0x52: 4GB DDR4 SDRAM PC4-19200 SO-DIMM


spdmem0 at iic0 addr 0x50: 8GB DDR3 SDRAM PC3-10600 SO-DIMM
spdmem1 at iic0 addr 0x51: 8GB DDR3 SDRAM PC3-10600 SO-DIMM
-------
nvme:

nvme0 at pci1 dev 0 function 0 vendor "Intel", unknown product 0xfaf0 rev 0x03: msix, NVMe 1.3
nvme0: INTEL SSDPEKNW010T9, firmware 001C, serial BTNR004318SM1P0B
scsibus1 at nvme0: 2 targets, initiator 0
sd0 at scsibus1 targ 1 lun 0: <NVMe, INTEL SSDPEKNW01, 001C>
sd0: 976762MB, 512 bytes/sector, 2000409264 sectors

nvme0 at pci1 dev 0 function 0 "Samsung SM981/PM981 NVMe" rev 0x00: msix, NVMe 1.3
nvme0: Samsung SSD 970 EVO Plus 2TB, firmware 2B2QEXM7, serial serialserialserial
scsibus1 at nvme0: 2 targets, initiator 0
sd0 at scsibus1 targ 1 lun 0: <NVMe, Samsung SSD 970, 2B2Q>
sd0: 1907729MB, 512 bytes/sector, 3907029168 sectors

----------------------------------------

NetBSD:

[     1.011873] spdmem0: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 3200MHz (PC4-25600)
[     1.011873] spdmem1: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 3200MHz (PC4-25600)

Mac mini (G4/PowerPC):
[     1.000000] memory0 at mainbus0: len=128
[     1.000000] spdmem0 at memory0
[     1.000000] spdmem0: DDR SDRAM, no parity or ECC, 1GB, 400MHz (PC-3200)
[     1.000000] spdmem0: 13 rows, 11 cols, 2 ranks, 4 banks/chip, 5.0ns cycle time
[     1.000000] spdmem0: tAA-tRCD-tRP-tRAS: 2-3-3-8
[     1.000000] spdmem0: voltage SSTL 2.5V, refresh time 7.8us (self-refreshing)

[     1.037567] spdmem0 at iic0 addr 0x50: 9965745-002.A00G
[     1.037567] spdmem0: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 2667MHz (PC4-21300)
[     1.037567] spdmem0: 16 rows, 10 cols, 2 ranks (symmetric), 4 banks/group, 4 bank groups
[     1.037567] spdmem0: 0.750ns cycle time
[     1.037567] spdmem0: tAA-tRCD-tRP-tRAS: 19-19-19-43
[     1.037567] spdmem1 at iic0 addr 0x51: 9965745-002.A00G
[     1.037567] spdmem1: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 2667MHz (PC4-21300)
[     1.037567] spdmem1: 16 rows, 10 cols, 2 ranks (symmetric), 4 banks/group, 4 bank groups
[     1.037567] spdmem1: 0.750ns cycle time
[     1.037567] spdmem1: tAA-tRCD-tRP-tRAS: 19-19-19-43
[     1.037567] spdmem2 at iic0 addr 0x52: 9965745-002.A00G
[     1.037567] spdmem2: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 2667MHz (PC4-21300)
[     1.037567] spdmem2: 16 rows, 10 cols, 2 ranks (symmetric), 4 banks/group, 4 bank groups
[     1.037567] spdmem2: 0.750ns cycle time
[     1.037567] spdmem2: tAA-tRCD-tRP-tRAS: 19-19-19-43
[     1.037567] spdmem3 at iic0 addr 0x53: 9965745-002.A00G
[     1.037567] spdmem3: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 2667MHz (PC4-21300)
[     1.037567] spdmem3: 16 rows, 10 cols, 2 ranks (symmetric), 4 banks/group, 4 bank groups
[     1.037567] spdmem3: 0.750ns cycle time
[     1.037567] spdmem3: tAA-tRCD-tRP-tRAS: 19-19-19-43

ryzen 
[     1.011873] spdmem0 at iic0 addr 0x50: 9ASF2G72AZ-3G2B1
[     1.011873] spdmem0: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 3200MHz (PC4-25600)
[     1.011873] spdmem0: 17 rows, 10 cols, 1 ranks, 4 banks/group, 4 bank groups
[     1.011873] spdmem0: 0.625ns cycle time
[     1.011873] spdmem0: tAA-tRCD-tRP-tRAS: 22-22-22-52
[     1.011873] spdmem1 at iic0 addr 0x51: 9ASF2G72AZ-3G2B1
[     1.011873] spdmem1: DDR4 SDRAM (DDR4 UDIMM), ECC, temp-sensor, 16GB, 3200MHz (PC4-25600)
[     1.011873] spdmem1: 17 rows, 10 cols, 1 ranks, 4 banks/group, 4 bank groups
[     1.011873] spdmem1: 0.625ns cycle time
[     1.011873] spdmem1: tAA-tRCD-tRP-tRAS: 22-22-22-52

----------------------------------------

FreeBSD:

pci0: <memory, RAM> at device 20.2 (no driver attached)

https://dmesgd.nycbug.org/index.cgi?do=view&id=5990:
[drm] vm size is 64 GB, 2 levels, block size is 10-bit, fragment size is 9-bit
amdgpu/tonga_mc.bin: could not load firmware image, error 2
drmn0: fail (0) to get firmware image with name: amdgpu/tonga_mc.bin
drmn0: successfully loaded firmware image with mapped name: amdgpu_tonga_mc_bin
drmn0: VRAM: 8192M 0x000000F400000000 - 0x000000F5FFFFFFFF (8192M used)
drmn0: GTT: 1024M 0x0000000000000000 - 0x000000003FFFFFFF
Failed to add WC MTRR for [0xe0000000-0xefffffff]: -22; performance may suffer
[drm] Detected VRAM RAM=8192M, BAR=256M
[drm] RAM width 256bits GDDR5

FreeBSD-13.0-BETA4/arm64 GENERIC-MMCCAM on raspberrypi rpi 3Bplus

bcm2835_cpufreq0: ARM 600MHz, Core 250MHz, SDRAM 400MHz, Turbo OFF

drmn0: VRAM: 2048M 0x000000F400000000 - 0x000000F47FFFFFFF (2048M used)
drmn0: GART: 1024M 0x0000000000000000 - 0x000000003FFFFFFF
drmn0: AGP: 267419648M 0x000000F800000000 - 0x0000FFFFFFFFFFFF
Successfully added WC MTRR for [0xe0000000-0xefffffff]: 0; 
[drm] Detected VRAM RAM=2048M, BAR=256M
[drm] RAM width 64bits DDR4

[drm] vm size is 262144 GB, 4 levels, block size is 9-bit, fragment size is 9-bit
drmn0: VRAM: 2048M 0x000000F400000000 - 0x000000F47FFFFFFF (2048M used)
drmn0: GART: 1024M 0x0000000000000000 - 0x000000003FFFFFFF
drmn0: AGP: 267419648M 0x000000F800000000 - 0x0000FFFFFFFFFFFF
Successfully added WC MTRR for [0xe0000000-0xefffffff]: 0; 
[drm] Detected VRAM RAM=2048M, BAR=256M
[drm] RAM width 64bits DDR4


----------------------------------------
softraid data
----------------------------------------

https://man.openbsd.org/softraid.4

Currently softraid supports the following disciplines:

RAID 0
    A striping discipline. It segments data over a number of chunks to increase performance. RAID 0 does not provide for data loss (redundancy).
RAID 1
    A mirroring discipline. It copies data across more than one chunk to provide for data loss. Read performance is increased, though at the cost of write speed. Unlike traditional RAID 1, softraid supports the use of more than two chunks in a RAID 1 setup.
RAID 5
    A striping discipline with floating parity across all chunks. It stripes data across chunks and provides parity to prevent data loss of a single chunk failure. Read performance is increased; write performance does incur additional overhead.
CRYPTO
    An encrypting discipline. It encrypts data on a single chunk to provide for data confidentiality. CRYPTO does not provide redundancy.
CONCAT
    A concatenating discipline. It writes data to each chunk in sequence to provide increased capacity. CONCAT does not provide redundancy.
RAID 1C
    A mirroring and encrypting discipline. It encrypts data to provide for data confidentiality and copies the encrypted data across more than one chunk to prevent data loss in case of a chunk failure. Unlike traditional RAID 1, softraid supports the use of more than two chunks in a RAID 1C setup. 

    
The status of softraid volumes is reported via sysctl(8) such that it can be monitored by sensorsd(8). Each volume has one fourth level node named hw.sensors.softraid0.driveN, where N is a small integer indexing the volume. The format of the volume status is:

value (device), status

The device identifies the softraid volume. The following combinations of value and status can occur:

online, OK
    The volume is operating normally.
degraded, WARNING
    The volume as a whole is operational, but not all of its chunks are. In many cases, using bioctl(8) -R to rebuild the failed chunk is advisable.
rebuilding, WARNING
    A rebuild operation was recently started and has not yet completed.
failed, CRITICAL
    The device is currently unable to process I/O.
unknown, UNKNOWN
    The status is unknown to the system.
	
https://marc.info/?l=openbsd-misc&m=145607956104915&w=2
$ doas bioctl softraid0
Volume      Status               Size Device
softraid0 0 Rebuild    12002360033280 sd6     RAID5 35% done
        0 Rebuild     4000786726912 0:0.0   noencl <sd2a>
        1 Online      4000786726912 0:1.0   noencl <sd3a>
        2 Online      4000786726912 0:2.0   noencl <sd4a>
        3 Online      4000786726912 0:3.0   noencl <sd5a>
        
$ doas bioctl softraid0
 Volume      Status               Size Device
 softraid0 0 Degraded    12002360033280 sd6     RAID5
           0 Offline     4000786726912 0:0.0
           1 Online      4000786726912 0:1.0   noencl <sd3a>
           2 Online      4000786726912 0:2.0   noencl <sd4a>
           3 Online      4000786726912 0:3.0   noencl <sd5a>

http://daemonforums.org/showthread.php?t=4893
$ sudo bioctl softraid0
Volume Status Size Device
softraid0 0 Rebuild 1073684480 sd2 RAID1 70% done
0 Online 1073684480 0:0.0 noencl <sd0a>
1 Rebuild 1073684480 0:1.0 noencl <sd1a>

$ sudo bioctl softraid0
Volume Status Size Device
softraid0 0 Rebuild 1073684480 sd2 RAID1 70% done
0 Online 1073684480 0:0.0 noencl <sd0a>
1 Rebuild 1073684480 0:1.0 noencl <sd1a> 

$ sudo bioctl softraid0
Volume Status Size Device
softraid0 0 Rebuild 1073684480 sd2 RAID1 97% done
0 Online 1073684480 0:0.0 noencl <sd0a>
1 Rebuild 1073684480 0:1.0 noencl <sd1a>

$ sudo bioctl softraid0
Volume Status Size Device
softraid0 0 Online 1073684480 sd2 RAID1
0 Online 1073684480 0:0.0 noencl <sd0a>
1 Online 1073684480 0:1.0 noencl <sd1a>

http://daemonforums.org/showthread.php?t=8869
# bioctl softraid0
Volume      Status               Size Device  
softraid0 0 Online       938117554176 sd2     RAID1 
          0 Online       938117554176 0:0.0   noencl <sd0m>
          1 Online       938117554176 0:1.0   noencl <sd1m>
          
@data = (
'Volume      Status               Size Device',
'softraid0 0 Degraded    12002360033280 sd6     RAID5',
'0 Offline     4000786726912 0:0.0',
'1 Online      4000786726912 0:1.0   noencl <sd3a>',
'2 Online      4000786726912 0:2.0   noencl <sd4a>',
'3 Online      4000786726912 0:3.0   noencl <sd5a>'
);

@data = (
'Volume      Status               Size Device',
'softraid0 0 Rebuild    12002360033280 sd6     RAID5 35% done',
'0 Rebuild     4000786726912 0:0.0   noencl <sd2a>',
'1 Online      4000786726912 0:1.0   noencl <sd3a>',
'2 Online      4000786726912 0:2.0   noencl <sd4a>',
'3 Online      4000786726912 0:3.0   noencl <sd5a>',
);
