================================================================================
INXI 
================================================================================
FILE:    inxi-bsd.txt
VERSION: 1.0
DATE:    2022-07-04

----------------------------------------
Docs:
See: docs/inxi-data.txt
See: docs/inxi-init.txt [lots on BSDs]
See: docs/inxi-resources.txt

----------------------------------------
Code:
See:

----------------------------------------
Comments: 
General BSD info, mostly OpenBSD, since that's the best supported in inxi, and
will remain the best for the foreseeable future.

Note that BSD specific data and sources are also found in other docs, this is 
mostly stuff that isn't implemented, or useful BSD information in general.

================================================================================
Sections:

1. BSD DATA
  OPENBSD
   Multibooting OpenBSD
   OpenBSD disklabel file systems:
   OpenBSD: Installing to emmc drive
  SOLARIS
2. BSD TOOLS / UTILITIES
  BLUETOOTH
    
================================================================================
BSD DATA
--------------------------------------------------------------------------------

========================================
OPENBSD
----------------------------------------

----------------------------------------
Multibooting OpenBSD
----------------------------------------

source https://srobb.net/openbsdmultiboot.html

Great how-to for dual booting openbsd and linux. Caveat, always make the openbsd 
formatted single large partition in linux, type a6 for openbsd, then run the 
openbsd installer which will basically pick that one as default when it comes 
time to pick where to install it:

Preserving this here because websites have a tendency to go away, especially
ones like this.

Note: make the type a6 partition in linux, not the openbsd installer, it's
super easy to make a mistake with fdisk. I prefer cfisk, it's more human
friendly, but otherwise, it's pretty much as simple as he says here, OpenBSD
will find its openbsd formatted partition, figure that is the one you want
to put openbsd on. Keep in mind, openbsd will put itself onto that partition
in many slices, so make sure it's big enough for your needs, I don't know
how ffs handles resizings etc.

----------------------------------------

I've used this method from 5.6 up through -current (while 6.2 is the release).

According to the OpenBSD FAQ, multibooting is non-trivial. Despite their
somewhat dire warnings, it's not that difficult if you know how to do it.
The usual caveats apply, it's always better to have backups, there is always
the risk of losing what is already on the disk.

This is assuming the newcomer has a bit of knowledge, a machine with Linux
installed, and a free partition. It does not have to be a primary partition,
a logical partition inside a Linux extended partition works just as well.
I've used this method with OpenBSD-5.6 through snapshots following 6.2.

Once one has said free partition, begin the OpenBSD installation. When it
comes to what part of the disk to use, you can choose e, as in edit. In our
example, we have a 4 partition MBR layout. We will use the last partition,
partition 4 in Linux fdisk. It will show as 3 in OpenBSD's, with partitions
labeled 0-3. Once we've chosen e, we will see fdisk: 1>. We then type

edit 3

3 is the Linux /dev/sda4 partition.

It will print the disk id (in this case, the filesystem type, which would
be 83 if it had been a Linux partition), and some other information such as
cylinders, heads and sectors. Type in a6, as we would in Linux fdisk. It will
ask if you wish to edit in CHS mode (Cylinder, Head, Sector) with a default
of n for no. Hit enter to take the default. It will then show the offset (start)
and size, which will be what you see if you had just typed p for print. Accept
the defaults given. Now hit p to be sure it's what you want. It should now
show partition 3 as id A6, OpenBSD.

If you're confident of your changes, you can type write and then quit. (Or just
quit, either one will save the changes). Typing exit will exit fdisk without
saving changes. Many other programs use opposite terminology, exit saves changes
and quit discards, so be careful. You can also type abort, which will, as expected,
just exit the program without saving changes, though if this is done during
installation (as opposed to using a shell and just typing fdisk -e sd0, the
OpenBSD terminology for the disk), it won't exit completely, it will bring
you back to the dialog of whether you wish to use the whole disk, or edit.

OpenBSD can also be installed on an extended partition. In that case, it may
be easier to use Linux's fdisk prior to installation. In this case, let's say
we have 3 primary and one extended partition, with, in Linux terminology,
drives 5 and 6 as logical partitions. We're going to use partition 6 for
OpenBSD. So, while in Linux use the following sequence

fdisk /dev/sda
t
6
a6
w

Toggle the type of partition
Choosing partition 6 in response to fdisk's question
a6 is the hex code number for an OpenBSD partition
write your changes.

You now have an OpenBSD partition. At this point, you can reboot with
your OpenBSD install media, whether it be USB, CD, or anything else.
After being asked the usual install questions, after it chooses the disk
and asks if you'd prefer to use DUIDs rather than device names in fstab,
you should then see a listing of your partitions, including an OpenBSD
partition. The choices should be

Use (W)hole disk, use the (O)penBSD area, or (E)dit the MBR [OpenBSD]

or something similar. Choose o, (case insensitive). That's it. The next
screen allows you to edit the partitions within the OpenBSD slice or use
installer auto defaults. Regardless, any changes you make to the disk will
only affect that partition. Assuming you boot from grub2, used by most Linux
distros these days, after installation, boot back into Linux and create
a /boot/grub/custom.cfg (or /boot/grub2/custom.cfg in RedHat and RedHat
based systems, such as CentOS and Fedora) that reads, if you installed
to the fourth partition.

menuentry "OpenBSD" {
set root='(hd0,4)'
chainloader (hd0,4)+1
}

If you used partition 6 as we did with Linux's fdisk, you would change the
hd0,4 entries above to hd0,6. If you reboot and select that menu entry, you
will then boot into your OpenBSD installation.

This doesn't work on UEFI installs. It seems that one has to create an EFI
partition, even if one already exists, but at present, I am still experimenting
and hope to update this page at some point.

----------------------------------------
OpenBSD: Installing to emmc drive
----------------------------------------

source: http://daemonforums.org/showthread.php?t=10867

post: 2
user: jggimi
  
If you don't want to dual boot with FBSD:

* install onto USB

* boot USB

* create an MBR or GPT on the eMMC drive with fdisk(8). If you create a GPT,
don't forget to create the EFI partition for boot program storage.

* allocate partitions with disklabel(8). Automatic allocation would be advised.
format each partition with newfs(8)

* One partition at a time, use dump(8)/restore(8) to copy the USB system to eMMC.
remove the restoresymtable files in each restore()d partition. They don't hurt
anything, but they won't be needed again.

* use installboot(8) to write boot blocks.

* Edit your fstab(5) to point to the new DUID!

* reboot!

----------------------------------------
OpenBSD disklabel file systems:
----------------------------------------

This is to map disklabel fs to normal string versions

From: /usr/include/sys/disklabel.h

static char *fstypenames[] = {
0 "unused",
1 "swap",
2 "Version6",
3 "Version7",
4 "SystemV",
5 "4.1BSD",
6 "Eighth-Edition",
7 "4.2BSD",
8 "MSDOS",
9 "4.4LFS",
10 "unknown",
11 "HPFS",
12 "ISO9660",
13 "boot",
14 "ADOS",
15 "HFS",
16 "ADFS",
17 "ext2fs",
18 "ccd",
19 "RAID",
20 "NTFS",
21 "UDF",
22 NULL
};

/* Similar to the above, but used for things like the mount command. */
static char *fstypesnames[] = {
        "",             /* 0 */
        "",             /* 1 */
        "",             /* 2 */
        "",             /* 3 */
        "",             /* 4 */
        "",             /* 5 */
        "",             /* 6 */
        "ffs",          /* 7 */
        "msdos",        /* 8 */
        "lfs",          /* 9 */
        "",             /* 10 */
        "",             /* 11 */
        "cd9660",       /* 12 */
        "",             /* 13 */
        "ados",         /* 14 */
        "",             /* 15 */
        "",             /* 16 */
        "ext2fs",       /* 17 */
        "",             /* 18 */
        "",             /* 19 */
        "ntfs",         /* 20 */
        "udf",          /* 21 */
        NULL
};

doas disklabel sd0
# /dev/rsd0c:
type: SCSI
disk: SCSI disk
label: TEAM T253X2128G
duid: 31a46c352dcf4839
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 255
sectors/cylinder: 16065
cylinders: 15566
total sectors: 250069680
boundstart: 64
boundend: 250067790
drivedata: 0

16 partitions:
# size           offset  fstype [fsize bsize   cpg]
  a:          2097152               64  4.2BSD   2048 16384 12960 # /
  b:         16741760          2097216    swap                    # none
  c:        250069680                0  unused                    
  d:          8388608         18838976  4.2BSD   2048 16384 12960 # /tmp
  e:         29802016         27227584  4.2BSD   2048 16384 12960 # /var
  f:         12582912         57029600  4.2BSD   2048 16384 12960 # /usr
  g:          2097152         69612512  4.2BSD   2048 16384 12960 # /usr/X11R6
  h:         36295040         71709664  4.2BSD   2048 16384 12960 # /usr/local
  i:          4194304        108004704  4.2BSD   2048 16384 12960 # /usr/src
  j:         12582912        112199008  4.2BSD   2048 16384 12960 # /usr/obj
  k:        125285856        124781920  4.2BSD   2048 16384 12960 # /home

----------------------------------------
OpenBSD USB Device Drivers
----------------------------------------

Excellent resource: all available OpenBSD USB device drivers/chipset.
https://man.openbsd.org/usb.4

----------------------------------------
softraid
----------------------------------------

softraid, OpenBSD, very clear how to:

https://man.openbsd.org/softraid.4

bioctl tool:
https://man.openbsd.org/bioctl.8

Their legacy RAID stuff:
http://www.eclectica.ca/howto/openbsd-software-raid-howto.php
used raidctl, and was actually more detectable, unfortunately.

https://man.openbsd.org/OpenBSD-5.1/raidctl.8
note that appears to have been a much better tool in terms of reporting,
it had everything one would need, but is not used, replaced by bioctl

========================================
SOLARIS
----------------------------------------

A fairly comical notion to make inxi into Java, it's odd the people in this 
thread never thought to even ask about solaris support, from the inxi project. 
Wouldn't have done it, but that would still have been the easiest solution 
as a first step.

https://community.oracle.com/thread/3702321

- ddu

- prtdiag

- dladm show-phys

- prtvtoc <your list of disks>

Solaris11 has a few more...

isalist

psrinfo -pv

psrinfo -v

================================================================================
BSD TOOLS / UTILITIES / DATA
--------------------------------------------------------------------------------

========================================
BLUETOOTH
----------------------------------------

----------------------------------------
FreeBSD: hccontrol
----------------------------------------

https://forums.freebsd.org/threads/how-to-bluetooth.64797/

hccontrol -n ubt0hci inquiry
Inquiry result, num_responses=1
Inquiry result #0
BD_ADDR: 00:1a:7d:da:71:13
Page Scan Rep. Mode: 0x1
Page Scan Period Mode: 0x2
Page Scan Mode: 00
Class: 0c:01:0c
Clock offset: 0x1c5c
Inquiry complete. Status: No error [00]

----------------------------------------
OpenBSD: removed
----------------------------------------

Bluetooth removed from kernel due to bad code and security concerns.

----------------------------------------
hcconfig - for bluetooth
----------------------------------------

Never seen output, but if you select
the Inquiry option, it should show the current bluetooth status.
Not that bluetooh has much life in be BSDs, OpenBSD totally
dropped it, and FreeBSD support is barely there.

========================================
VARIOUS
----------------------------------------

----------------------------------------
sysdef - sys info
----------------------------------------

sysdef -D - system peripherals

sysdef -d - system drivers

----------------------------------------
Various
----------------------------------------

sudo scanpci

sudo zonep2vchk -b

dladm show-vnic

dladm show-Link

cat /etc/release

dmesg: old

Overview of various freebsd disk utilities:
https://linuxhint.com/list-disks-freebsd/

========================================
DATA
----------------------------------------

----------------------------------------
dmesg.boot files
----------------------------------------

https://dmesgd.nycbug.org

great resource, tons of dmesg files so you can check syntax variations

========================================

----------------------------------------

----------------------------------------

----------------------------------------

================================================================================

--------------------------------------------------------------------------------

========================================

----------------------------------------

----------------------------------------

----------------------------------------

