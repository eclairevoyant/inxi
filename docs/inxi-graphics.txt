================================================================================
INXI GRAPHICS
================================================================================
FILE:    inxi-graphics.txt
VERSION: 1.0
DATE:    2022-06-14

----------------------------------------
Docs:
See: 

----------------------------------------
Code:
See:

----------------------------------------
Comments:

================================================================================
Sections:


================================================================================
GRAPHICS DATA
--------------------------------------------------------------------------------

========================================
CARD RAM:
----------------------------------------

https://askubuntu.com/questions/46197/how-to-check-video-memory-size
https://askubuntu.com/questions/46197/how-to-check-video-memory-size/475405#475405

wrong about lspci video ram but:
https://www.cyberciti.biz/faq/howto-find-linux-vga-video-card-ram/

lspci  -v -s  $(lspci | grep VGA | cut -d" " -f 1) | grep " prefetchable"
grep -P -o -i "(?<=memory:).*(?=kbytes)" /var/log/Xorg.0.log

CARD ARM ID:
display-port-controller
https://ip.cadence.com/ipportfolio/ip-portfolio-overview/interface-ip/display-ip/hd-display-transmitter-controller

----------------------------------------

/usr/lib/xorg-server/Xorg.wrap: Only console users are allowed to run the X server
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863891

========================================
x_drivers()
----------------------------------------

List of xorg drivers by name
https://www.x.org/wiki/Projects/Drivers/

========================================
x_display_data()
----------------------------------------

https://stackoverflow.com/questions/35168810/is-it-possible-to-obtain-a-monitor-description-using-xrandr
edid data from: xrandr --verbose then parse-edid to translate to text.

https://metacpan.org/pod/Parse::EDID

https://unix.stackexchange.com/questions/114359/how-to-get-edid-for-a-single-monitor
https://stackoverflow.com/questions/10500521/linux-retrieve-monitor-names

========================================
wayland_data()
----------------------------------------
https://stackoverflow.com/questions/46578951/list-screen-resolutions-using-wayland-weston
weston-info

https://bugs.freedesktop.org/show_bug.cgi?id=101750

https://github.com/swaywm/sway/wiki/Useful-add-ons-for-sway
also useful list of general wayland tools/programs.

https://github.com/swaywm/wlroots
moved to:
https://gitlab.freedesktop.org/wlroots/wlroots

https://github.com/swaywm/wlroots/wiki/Getting-started

worth looking into as base for many compositors

https://github.com/solarkraft/awesome-wlroots

----------------------------------------

See set_monitors() and main::get_pcie_data() section for /sys/class/drm based
data, that gives monitor mods, kernel monitor ids, monitors enabled/disabled,
connected/disconnected/unknown.

----------------------------------------

https://stackoverflow.com/questions/46578951/list-screen-resolutions-using-wayland-weston/49705537

The simplest way is to check the weston log which will give you all supported modes for each connector(VGA,LVDS and HDMI) below are the log which highlights these.

[09:23:40.144] Output VGA-1 (crtc 59) video modes:
           1024x768@60.0, preferred, current, 65.0 MHz
           1440x900@59.9, 88.8 MHz
           1366x768@59.8, 85.5 MHz
           1366x768@60.0, 72.0 MHz
           1360x768@60.0, 85.5 MHz
           1280x800@59.8, 83.5 MHz
           1280x800@59.9, 71.0 MHz
           1280x768@59.9, 79.5 MHz
           1280x768@60.0, 68.2 MHz
           1280x720@60.0, 74.2 MHz
           800x600@60.3, 40.0 MHz
           800x600@56.2, 36.0 MHz
           848x480@60.0, 33.8 MHz
           640x480@59.9, 25.2 MHz
[09:23:40.144] Output 'VGA-1' enabled with head(s) VGA-1
[09:23:40.145] Chosen EGL config details:
           RGBA bits: 8 8 8 0
           swap interval range: 1 - 1
[09:23:40.151] Output HDMI-A-2 (crtc 58) video modes:
           1920x1080@60.0, preferred, current, 138.8 MHz
           1920x1080@60.0, 148.5 MHz
           1920x1080@59.9, 148.4 MHz
           1920x1080@60.0, 74.2 MHz
           1920x1080@59.9, 74.2 MHz
           1920x1080@50.0, 148.5 MHz
           1920x1080@50.0, 74.2 MHz
           1920x1080@40.0, 92.5 MHz
           1280x720@60.0, 74.2 MHz
           1280x720@59.9, 74.2 MHz
           1280x720@50.0, 74.2 MHz
           720x576@50.0, 27.0 MHz
           720x480@60.0, 27.0 MHz
           720x480@59.9, 27.0 MHz
           640x480@60.0, 25.2 MHz
           640x480@59.9, 25.2 MHz
[09:23:40.152] Output 'HDMI-A-2' enabled with head(s) HDMI-A-2
[09:23:40.152] Chosen EGL config details:
           RGBA bits: 8 8 8 0
           swap interval range: 1 - 1
[09:23:40.155] Output LVDS-1 (crtc 56) video modes:
           1024x768@60.2, preferred, current, 65.0 MHz
[09:23:40.155] Output 'LVDS-1' enabled with head(s) LVDS-1

-----

If you want to list all the modes the compositor supports (might not be the same 
as your monitor), you can run weston-info

----------------------------------------
https://discourse.gnome.org/t/get-monitor-number-size-and-scale-with-gtk-and-wayland/2776

https://discourse.gnome.org/t/get-screen-resolution-scale-factor-and-width-and-height-in-mm-for-wayland/7448
----------------------------------------
https://fedoramagazine.org/how-to-setup-multiple-monitors-in-sway/

swaymsg -t get_outputs

========================================
map_ids()
----------------------------------------

https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/drivers/gpu/drm/drm_connector.c?h=v5.16.5#n85
static struct drm_conn_prop_enum_list drm_connector_enum_list[] = {
	{ DRM_MODE_CONNECTOR_Unknown, "Unknown" },
	{ DRM_MODE_CONNECTOR_VGA, "VGA" },
	{ DRM_MODE_CONNECTOR_DVII, "DVI-I" },
	{ DRM_MODE_CONNECTOR_DVID, "DVI-D" },
	{ DRM_MODE_CONNECTOR_DVIA, "DVI-A" },
	{ DRM_MODE_CONNECTOR_Composite, "Composite" },
	{ DRM_MODE_CONNECTOR_SVIDEO, "SVIDEO" },
	{ DRM_MODE_CONNECTOR_LVDS, "LVDS" },
	{ DRM_MODE_CONNECTOR_Component, "Component" },
	{ DRM_MODE_CONNECTOR_9PinDIN, "DIN" },
	{ DRM_MODE_CONNECTOR_DisplayPort, "DP" },
	{ DRM_MODE_CONNECTOR_HDMIA, "HDMI-A" },
	{ DRM_MODE_CONNECTOR_HDMIB, "HDMI-B" },
	{ DRM_MODE_CONNECTOR_TV, "TV" },
	{ DRM_MODE_CONNECTOR_eDP, "eDP" },
	{ DRM_MODE_CONNECTOR_VIRTUAL, "Virtual" },
	{ DRM_MODE_CONNECTOR_DSI, "DSI" },
	{ DRM_MODE_CONNECTOR_DPI, "DPI" },
	{ DRM_MODE_CONNECTOR_WRITEBACK, "Writeback" },
	{ DRM_MODE_CONNECTOR_SPI, "SPI" },
	{ DRM_MODE_CONNECTOR_USB, "USB" },
};

https://landley.net/kdocs/htmldocs/drm.html

https://gitlab.freedesktop.org/xorg/driver/xf86-video-amdgpu/-/blob/master/src/drmmode_display.c#L2629
This file shows where amdgpu changes the numbering of monitor id by -1.

if (mode->name)
		strncpy(kmode->name, mode->name, DRM_DISPLAY_MODE_LEN);
	kmode->name[DRM_DISPLAY_MODE_LEN - 1] = 0;

----------------------------------------
https://askubuntu.com/questions/1310482/how-to-map-which-external-monitor-is-seen-as-which-dvi-plug-for-displaylink-x

note: 

4 external monitors go into : a hub of 4 DisplayLink-branded external 
videocards. (HDMI to USB)

Let's call it a dock. The dock goes into my laptop through one USB(-C).

I already made a udev rule, that detects an identifying attribute of the dock, 
and runs my xrandr command when I hotplug it.

Here is the bash command:

#!/bin/sh
xrandr \
--output DP-1 --off \
--output DP-2 --off \
--output HDMI-1 --off \
--output HDMI-2 --off \
--output DVI-I-4-3 --mode 1920x1080 --pos 0x0 --rotate normal \
--output DVI-I-5-4 --mode 1920x1080 --pos 0x1080 --rotate normal \
--output DVI-I-2-1 --mode 1920x1080 --pos 1920x240 --rotate left \
--output DVI-I-3-2 --mode 1920x1080 --pos 3000x240 --rotate left \
--output eDP-1 --primary --mode 1920x1080 --pos 4080x1900 --rotate normal

The problem is that at each hotplug, the monitors/cards of the dock are loaded 
randomly by the kernel. In other word I can't predict what monitor will be the 
DVI-I-M-N used in the xrandr command.

========================================
set_monitor_position()
----------------------------------------

https://unix.stackexchange.com/questions/667482/understanding-the-output-of-xrandr-query

Terminology

Words like monitor, screen, display and so on are near-synonyms, but in a given 
technical context, they can have different meanings. Unfortunately, the same 
word can have a different meaning in different communities. In this answer, I'll 
use the word monitor to mean a physical object that displays images on a 
(generally) rectangular canvas, typically a computer monitor (or something 
similar such as a video projector).

As far as the X window system is concerned, a display is a logical entity to 
which applications can connect and on which they can display windows, receive 
input, and do a few other things. A display can have multiple monitors, or can 
be connected to a virtual “monitor” that is not a physical device, for example a 
network connection for remote displays.

A screen is an obsolete concept. It's the original way X managed multiple 
monitors: a display could have multiple screens, each representing one monitor. 
An application had to choose which screen to display a window on; a window could 
not span multiple screens and could not move between screens. Due to these 
limitations, the concept has been mostly abandoned, but the operating system 
still supports it and the terminology still comes up here and there. Nowadays, 
there's just one screen that can span multiple monitors.

An output is the term that Xrandr uses to mean a port on the computer onto which 
a monitor. A “connected” output is a port on which a monitor is present (or a 
port on which the presence of a monitor cannot be reliably determined). Question 
1: screen dimensions

The display (technically the screen, but as we saw above in the modern world a 
display has a single screen) is a rectangular canvas on which windows can be 
displayed. The dimensions of this canvas typically change when the monitor 
configuration changes: it's adjusted to be the smallest rectangle that all the 
monitors fit in.

The first line indicates the minimum possible, current and maximum possible 
dimensions of this canvas. Each monitor shows a rectangular part of the canvas, 
aligned with the axes.

The minimum and maximum dimensions are only relevant when the monitor 
configuration changes. Parts of the canvas that are not shown by any monitor are 
effectively invisible. For example, if you had a single, tiny 320x160 monitor, 
the canvas would have to be at least 320x160 and the bottom half of the canvas 
would be invisible.

On the line for each monitor, the numbers after (dis)connected indicate the 
dimensions and the position of the monitor. For example, if you had a second 
monitor of the same size to the right of HDMI-0, that monitor would show 
1920x1080+1920+0. If that second monitor was below HDMI-0, it would show 
1920x1080+0+1080.

Question 2: monitor transformations

A monitor normally shows the pixel (x=0,y=0) (relative to the monitor's origin) 
at the top left, the pixel (x=1,y=1) immediately to its right, etc. If your 
system supports it (and most modern ones do), the monitor can be instructed to 
show the output differently. This can be configured with xrandr --rotate … 
--reflect …. The words in parentheses indicate the possible transformations.

For example, left rotates the picture 90° clockwise, and right rotates the 
picture 90° anticlockwise. This is useful if you've rotated the monitor 
correspondingly, typically because your monitor is wider than it's tall 
(landscape) but you want a displayed area that's taller than it's wide 
(portrait) so you rotate it. For example, after xrandr --output HDMI-0 --rotate 
left, the corresponding line will change to

HDMI-0 connected primary 1920x1080+0+0 left (normal left inverted right x axis y axis) 521mm x 293mm

inverted shows the image rotated upside-down. x axis (the two words are a single 
thing) shows the image flipped upside-down. y axis shows the image flipped 
around a vertical axis (in case for some reason you want to look at your monitor 
in a mirror). You can combine a rotation and a reflection. You can even specify 
--rotate inverted --reflect xy which shows the image normally since the 
composition of two orthogonal flips and a 180° turn is the identity 
transformation. Enabling a single output

I wish to have a command line where xrandr is called so that all displays except 
for this HDMI-0 display are turned off.

xrandr --output VGA-0 --off --output LVDS --off --output HDMI-0 --auto

--auto is the strange way xrandr spells “on” (i.e. “active”). It's the opposite 
of --off.
--primary is not useful when there's a single active monitor.
--pos lets you specify the position of the monitor on the canvas. 0x0 is the 
default so you don't need to specify it. It's somewhat unusual to use --pos 
explicitly; most often you'd use one of --mirror, --right-of, --left-of, --above 
or --below to position monitors relative to each other.
--mode is not useful unless you want to pick a mode that's different from the 
default, or to switch back from a non-default mode. The default is usually the 
best choice.
--rotate is not useful unless you want to pick a non-default rotation, or to 
switch back from a non-default rotation. The default rotation is usually the 
right one unless you've rotated your monitor to be in a portrait format, in 
which case you need --rotate left or --rotate right.

----------------------------------------
set_monitors() and main::get_pcie_data()
----------------------------------------
If wanted, check into non core module Parse::EDID to get more edid data.

https://metacpan.org/pod/Parse::EDID

----------------------------------------
https://wiki.st.com/stm32mpu/wiki/DRM_KMS_overview

----------------------------------------
https://unix.stackexchange.com/questions/576707/how-to-monitor-amd-gpu-on-linux-server

For vram and other custom /sys values
https://dri.freedesktop.org/docs/drm/gpu/amdgpu.html

========================================

----------------------------------------

----------------------------------------

----------------------------------------

================================================================================

--------------------------------------------------------------------------------

========================================

----------------------------------------

----------------------------------------

----------------------------------------

